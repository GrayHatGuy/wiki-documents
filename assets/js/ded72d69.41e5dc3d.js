"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[58706],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>k});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),d=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},p=function(e){var n=d(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=d(a),m=r,k=u["".concat(s,".").concat(m)]||u[m]||c[m]||o;return a?t.createElement(k,l(l({ref:n},p),{},{components:a})):t.createElement(k,l({ref:n},p))}));function k(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var d=2;d<o;d++)l[d]=a[d];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},54471:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var t=a(87462),r=(a(67294),a(3905));const o={description:"Grove Beginner Kit para Arduino es uno de los mejores kits introductorios a la plataforma de Arduino. Incluye una tarjeta de desarrollo complatible con Arduino y 10 sensores adicionales, todo en un solo PCB.",title:"Baeginner Kit for Arduino",keywords:["Grove","Spanish"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",slug:"Grove-Beginner-Kit-For-Arduino_Espa\xf1ol",last_update:{date:"06/20/2023",author:"Mario Andres De los Santos Hernandez"}},l="Grove Beginner Kit para Arduino",i={unversionedId:"Spanish/Sensor/Grove/Grove-Beginner-Kit-For-Arduino_Espa\u0e04ol",id:"Spanish/Sensor/Grove/Grove-Beginner-Kit-For-Arduino_Espa\u0e04ol",title:"Baeginner Kit for Arduino",description:"Grove Beginner Kit para Arduino es uno de los mejores kits introductorios a la plataforma de Arduino. Incluye una tarjeta de desarrollo complatible con Arduino y 10 sensores adicionales, todo en un solo PCB.",source:"@site/docs/Spanish/Sensor/Grove/Grove-Beginner-Kit-For-Arduino_Espa\u0e04ol.md",sourceDirName:"Spanish/Sensor/Grove",slug:"/Spanish/Sensor/Grove/Grove-Beginner-Kit-For-Arduino_Espa\xf1ol",permalink:"/Spanish/Sensor/Grove/Grove-Beginner-Kit-For-Arduino_Espa\xf1ol",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Spanish/Sensor/Grove/Grove-Beginner-Kit-For-Arduino_Espa\u0e04ol.md",tags:[],version:"current",lastUpdatedBy:"Mario Andres De los Santos Hernandez",lastUpdatedAt:1687219200,formattedLastUpdatedAt:"Jun 20, 2023",frontMatter:{description:"Grove Beginner Kit para Arduino es uno de los mejores kits introductorios a la plataforma de Arduino. Incluye una tarjeta de desarrollo complatible con Arduino y 10 sensores adicionales, todo en un solo PCB.",title:"Baeginner Kit for Arduino",keywords:["Grove","Spanish"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",slug:"Grove-Beginner-Kit-For-Arduino_Espa\xf1ol",last_update:{date:"06/20/2023",author:"Mario Andres De los Santos Hernandez"}}},s={},d=[{value:"Descripci\xf3n del Hardware",id:"descripci\xf3n-del-hardware",level:2},{value:"Instrucciones de Separaci\xf3n",id:"instrucciones-de-separaci\xf3n",level:3},{value:"Lista de Partes",id:"lista-de-partes",level:2},{value:"Objetivos de Aprendizaje",id:"objetivos-de-aprendizaje",level:2},{value:"Demostraci\xf3n de Unboxing Plug and Play",id:"demostraci\xf3n-de-unboxing-plug-and-play",level:3},{value:"C\xf3mo iniciar con Arduino",id:"c\xf3mo-iniciar-con-arduino",level:2},{value:"Instalar el Arduino IDE",id:"instalar-el-arduino-ide",level:3},{value:"Instalaci\xf3n del controlador USB",id:"instalaci\xf3n-del-controlador-usb",level:3},{value:"Inico con el IDE de Arduino",id:"inico-con-el-ide-de-arduino",level:3},{value:"Gu\xeda de Lecciones",id:"gu\xeda-de-lecciones",level:2},{value:"Lecci\xf3n 1: Parpadeo con el LED",id:"lecci\xf3n-1-parpadeo-con-el-led",level:3},{value:"Lecci\xf3n 2: Presionando un bot\xf3n para encender el LED",id:"lecci\xf3n-2-presionando-un-bot\xf3n-para-encender-el-led",level:3},{value:"Lecci\xf3n 3: Controlando la Frecuencia de Parpadeo",id:"lecci\xf3n-3-controlando-la-frecuencia-de-parpadeo",level:3},{value:"Lecci\xf3n 4: Haciendo el Zumbador sonar BEEP",id:"lecci\xf3n-4-haciendo-el-zumbador-sonar-beep",level:3},{value:"Lecci\xf3n 5:  Hacer un LED inductivo de LUZ.",id:"lecci\xf3n-5--hacer-un-led-inductivo-de-luz",level:3},{value:"Lecci\xf3n 6: LED sensible al sonido.",id:"lecci\xf3n-6-led-sensible-al-sonido",level:3},{value:"Lecci\xf3n 7: Mostando Datos en un OLED",id:"lecci\xf3n-7-mostando-datos-en-un-oled",level:3},{value:"Lecci\xf3n 8: Detectando Temperatura y Humedad del Entorno",id:"lecci\xf3n-8-detectando-temperatura-y-humedad-del-entorno",level:3},{value:"Lesson 9: Measuring Surrounding Air Pressure",id:"lesson-9-measuring-surrounding-air-pressure",level:3},{value:"Lecci\xf3n 10: Sensando Movimiento",id:"lecci\xf3n-10-sensando-movimiento",level:3},{value:"Proyectos Extras",id:"proyectos-extras",level:2},{value:"Proyecto 1: L\xe1mpara de ritmo din\xe1mico musical.",id:"proyecto-1-l\xe1mpara-de-ritmo-din\xe1mico-musical",level:3},{value:"Proyecto 2: Haga una L\xe1mpara de Escritorio Inteligente a la inducci\xf3n de luz y sonido.",id:"proyecto-2-haga-una-l\xe1mpara-de-escritorio-inteligente-a-la-inducci\xf3n-de-luz-y-sonido",level:3},{value:"Crea tus propios m\xf3dulos &amp; tarjetas",id:"crea-tus-propios-m\xf3dulos--tarjetas",level:2},{value:"EDA",id:"eda",level:3},{value:"Servicios de PCB",id:"servicios-de-pcb",level:3},{value:"Visualizador de Esquem\xe1tico <em>Online</em>",id:"visualizador-de-esquem\xe1tico-online",level:2},{value:"Recursos",id:"recursos",level:2},{value:"M\xe1s Informaci\xf3n. Aprendizaje Continuo",id:"m\xe1s-informaci\xf3n-aprendizaje-continuo",level:2},{value:"Soporte T\xe9cnico",id:"soporte-t\xe9cnico",level:2}],p={toc:d};function u(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"grove-beginner-kit-para-arduino"},"Grove Beginner Kit para Arduino"),(0,r.kt)("p",null,"Grove Beginner Kit para Arduino es uno de los mejores kits introductorios a la plataforma de Arduino. Incluye una tarjeta de desarrollo complatible con Arduino y 10 sensores adicionales, todo en un solo PCB. ",(0,r.kt)("strong",{parentName:"p"},"Todos los m\xf3dulos se encuentran conectados al Seeeduino por medio de ",(0,r.kt)("em",null,"Stamp holes")," en el PCB, por ello no es necesario utlizar cables Grove"),". Por supuesto, puede retirar los m\xf3dulos y utilizarlos por medio de cables Grove. Podr\xe1 crear cualquier proyecto que quiera con el Grove Beginner Kit para Arduino."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Grove-Beginner-Kit-for-Arduino-p-4549.html"},(0,r.kt)("img",{parentName:"a",src:"https://files.seeedstudio.com/wiki/Seeed-WiKi/docs/images/300px-Get_One_Now_Banner-ragular.png",alt:null}))),(0,r.kt)("h2",{id:"descripci\xf3n-del-hardware"},"Descripci\xf3n del Hardware"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/Parts.jpg",alt:null})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," Dimensions - 17.69 ",(0,r.kt)("em",{parentName:"p"}," 11.64 ")," 1.88cm"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://wiki.seeedstudio.com/Grove-Red_LED/"},"Grove - LED"),":")," M\xf3dulo LED Simple"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://wiki.seeedstudio.com/Grove-Buzzer/"},"Grove - Buzzer"),":")," Zumbador Piezoel\xe9ctrico"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://wiki.seeedstudio.com/Grove-OLED-Display-0.96-SSD1315/"},'Grove - OLED Display 0.96"'),":")," Resoluci\xf3n de 128\xd764 pixeles, alto brillo, y alto contraste, dise\xf1ado en un compacto m\xf3dulo de bajo consumo."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://wiki.seeedstudio.com/Grove-Button/"},"Grove - Button"),":")," Bot\xf3n push moment\xe1neo. "),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://wiki.seeedstudio.com/Grove-Rotary_Angle_Sensor/"},"Grove - Rotary Potentiometer"),":")," Potenci\xf3metro Rotatorio."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://wiki.seeedstudio.com/Grove-Light_Sensor/"},"Grove - Light"),":")," Detector de intensidad de luz en el entorno. "),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://wiki.seeedstudio.com/Grove-Sound_Sensor/"},"Grove - Sound"),":"),"  Detector de intensidad de sonido del entorno. "),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://wiki.seeedstudio.com/Grove-TemperatureAndHumidity_Sensor/"},"Grove - Temperature & Humidity Sensor"),":")," Sensa la temperatura y humedad ambiente del entorno. "),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://wiki.seeedstudio.com/Grove-Barometer_Sensor-BMP280/"},"Grove - Air Pressure Sensor"),":")," Dedector de presi\xf3n atmosf\xe9rica del entorno. "),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://wiki.seeedstudio.com/Grove-3-Axis_Digital_Accelerometer-1.5g/"},"Grove - 3-Axis Accelerator"),":")," Aceler\xf3metro. Detector de aceleraci\xf3n del dispositivo. "),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://wiki.seeedstudio.com/Seeeduino_Lotus/"},"Seeeduino Lotus"),":")," Placa con puertos Grove compatible con Arduino.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Nota:"),"\nPor defecto, los m\xf3dulos est\xe1n conectados al Seeeduino por medio del PCB usando ",(0,r.kt)("em",null," Stamp Holes. ")," Esto significa que no tendr\xe1s que utilizar cables Grove si no desprendes el m\xf3dulo. Los pines preestablecidos son los siguientes: "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"M\xf3dulos"),(0,r.kt)("th",{parentName:"tr",align:null},"Interfaz"),(0,r.kt)("th",{parentName:"tr",align:null},"Pines/Direcci\xf3n"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"LED"),(0,r.kt)("td",{parentName:"tr",align:null},"Digital"),(0,r.kt)("td",{parentName:"tr",align:null},"D4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Zumbador"),(0,r.kt)("td",{parentName:"tr",align:null},"Digital"),(0,r.kt)("td",{parentName:"tr",align:null},"D5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'OLED Display 0.96"'),(0,r.kt)("td",{parentName:"tr",align:null},"I2C"),(0,r.kt)("td",{parentName:"tr",align:null},"I2C, 0x78(default)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Bot\xf3n"),(0,r.kt)("td",{parentName:"tr",align:null},"Digital"),(0,r.kt)("td",{parentName:"tr",align:null},"D6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Potenciometro Rotatorio"),(0,r.kt)("td",{parentName:"tr",align:null},"Analog"),(0,r.kt)("td",{parentName:"tr",align:null},"A0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Luz"),(0,r.kt)("td",{parentName:"tr",align:null},"Anal\xf3gico"),(0,r.kt)("td",{parentName:"tr",align:null},"A6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sonido"),(0,r.kt)("td",{parentName:"tr",align:null},"Anal\xf3gico"),(0,r.kt)("td",{parentName:"tr",align:null},"A2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sensor de Humedad y Temperatura"),(0,r.kt)("td",{parentName:"tr",align:null},"Digital"),(0,r.kt)("td",{parentName:"tr",align:null},"D3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sensor de presi\xf3n Atmosf\xe9rica"),(0,r.kt)("td",{parentName:"tr",align:null},"I2C"),(0,r.kt)("td",{parentName:"tr",align:null},"I2C, 0x77(default) / 0x76(opcional)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Aceler\xf3metro de 3 Ejes"),(0,r.kt)("td",{parentName:"tr",align:null},"I2C"),(0,r.kt)("td",{parentName:"tr",align:null},"I2C, 0x19(default)")))),(0,r.kt)("h3",{id:"instrucciones-de-separaci\xf3n"},"Instrucciones de Separaci\xf3n"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Atenci\xf3n:"),"\nPor favor, sea cuidadoso de no lastimarse utilizando un cuchillo"),(0,r.kt)("p",null,"Si prefiere utilizar los m\xf3dulos de manera indendiente \xa1Pude simplemente seguir estos procedimeintos para desprender los m\xf3dulos del PCB!"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Paso 1")),(0,r.kt)("p",null,"Utilice un cuchillo o alg\xfan objeto con filo para cortar en la uni\xf3n de los ",(0,r.kt)("em",null,"stamp holes")," que conectan todo el PCB"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Paso 2")),(0,r.kt)("p",null,"Mueva los m\xf3dulos de arriba a abajo, \xa1Se desprender\xe1 facilmente!"),(0,r.kt)("h2",{id:"lista-de-partes"},"Lista de Partes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"M\xf3dulos"),(0,r.kt)("th",{parentName:"tr",align:null},"Cantidad"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Sensores")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sensor de Temperatura y Humedad"),(0,r.kt)("td",{parentName:"tr",align:null},"x1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Aceler\xf3metro de 3 Ejes"),(0,r.kt)("td",{parentName:"tr",align:null},"x1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Presi\xf3n Atmosferica"),(0,r.kt)("td",{parentName:"tr",align:null},"x1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sensor de Luzx1"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sensor de Sonido"),(0,r.kt)("td",{parentName:"tr",align:null},"x1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"M\xf3dulos de entrada")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Potenci\xd3metro Rotatorio"),(0,r.kt)("td",{parentName:"tr",align:null},"x1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Bot\xf3n"),(0,r.kt)("td",{parentName:"tr",align:null},"x1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"M\xf3dulos de salida")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"LED"),(0,r.kt)("td",{parentName:"tr",align:null},"x1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Zumbador"),(0,r.kt)("td",{parentName:"tr",align:null},"x1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"M\xf3dulos de display")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OLED Display"),(0,r.kt)("td",{parentName:"tr",align:null},"x1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Cables Grove")),(0,r.kt)("td",{parentName:"tr",align:null},"x6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Cable Micro USB")),(0,r.kt)("td",{parentName:"tr",align:null},"x1")))),(0,r.kt)("h2",{id:"objetivos-de-aprendizaje"},"Objetivos de Aprendizaje"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fundamentos de Hardware ",(0,r.kt)("em",null,"Open Source"),"."),(0,r.kt)("li",{parentName:"ul"},"Fundamentos de programaci\xf3n en Arduino."),(0,r.kt)("li",{parentName:"ul"},"Principios de comunicaciones y m\xe9todos para sensores. "),(0,r.kt)("li",{parentName:"ul"},"Implementaci\xf3n pr\xe1ctica en proyectos con Hardware libre.")),(0,r.kt)("h3",{id:"demostraci\xf3n-de-unboxing-plug-and-play"},"Demostraci\xf3n de Unboxing Plug and Play"),(0,r.kt)("p",null,"El Kit Grove Beginner tiene un demo ",(0,r.kt)("em",null,"plug and play")," listo despu\xe9s del desempacado, donde una vez que alimente el dispositivo \xa1Tiene la oportunidad de experimentar con todos los sensores de inmediato! \xa1Utilice el bot\xf3n y potenci\xf3metro rotatorio para probar la demostraci\xf3n de cada sensor!"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://s3-us-west-2.amazonaws.com/files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/Firmware.jpg",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Deslizar")," -> Rotanto el Potenci\xf3metro."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Seleccionar")," -> Has una peque\xf1a presi\xf3n en el bot\xf3n."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Salir de la demo actual")," -> Manten presionado el bot\xf3n por un momento. ")),(0,r.kt)("p",null,"Los m\xf3dulos de Zumbador y LED son usados para indicaciones determindas. "),(0,r.kt)("h2",{id:"c\xf3mo-iniciar-con-arduino"},"C\xf3mo iniciar con Arduino"),(0,r.kt)("h3",{id:"instalar-el-arduino-ide"},"Instalar el Arduino IDE"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Arduino IDE")," Es un ambiente de desarrollo integrado para Arduino, el cual es usado para la programaci\xf3n de microcontroladores ",(0,r.kt)("em",null,"single-chip"),", descarga, prueba y as\xed como otras funciones. "),(0,r.kt)("li",{parentName:"ul"},"Descarge e Instale ",(0,r.kt)("a",{parentName:"li",href:"https://www.arduino.cc/en/Main/Software"},"Arduino IDE")," aqu\xed para el sistema operativo que desee.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Seeeduino_Stalker_V3_1/images/Download_IDE.png",alt:null})),(0,r.kt)("h3",{id:"instalaci\xf3n-del-controlador-usb"},"Instalaci\xf3n del controlador USB"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Arduino se conecta al PC por medio de un cable USB. El controlador USB depende del chip USB que se este usando en su Arduino. ",(0,r.kt)("em",{parentName:"p"},"Nota: Los chips USB est\xe1n normalmente impresos en la parte trasera de la tarjeta de desarrollo")," "),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Descarge el ",(0,r.kt)("a",{parentName:"li",href:"https://www.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers"},"controlador USB CP2102 "),". ",(0,r.kt)("strong",{parentName:"li"},"Note:")," Deber\xe1 descargar la versi\xf3n correspondiente a su sistema operativo."),(0,r.kt)("li",{parentName:"ul"},"Una vez que la instalaci\xf3n del controlador este completa, conecte el Arduino en el puerto USB usando el cable USB. ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Para usuarios de Windows:")," Puede verlo en ",(0,r.kt)("inlineCode",{parentName:"li"},"Mi Equipo")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"Propiedades")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"Hardware")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"Administrador de Dispositivos"),". Un ",(0,r.kt)("inlineCode",{parentName:"li"},"COM")," aparecer\xe1."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Para usuarios de MacOs")," Puede navegar a",(0,r.kt)("inlineCode",{parentName:"li"},"\uf8ff")," en la equina superior izquierda, y seleccionar ",(0,r.kt)("inlineCode",{parentName:"li"},"Acerca de este Mac")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"Informe del Sistema...")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"USB"),". El CP2102 USB Controlador deber\xe1 aparecer."))),(0,r.kt)("li",{parentName:"ul"},'Si el controlar no se encuentra instalado, o no se ha intalado correctamente (El m\xf3delo no coincide), este aparecer\xe1 como "Dispositivo desconocido" en el administrador de dispositivos. En este punto, el controlador deber\xe1 ser reinstalado.')))),(0,r.kt)("h3",{id:"inico-con-el-ide-de-arduino"},"Inico con el IDE de Arduino"),(0,r.kt)("p",null,"1.Abra el ",(0,r.kt)("strong",{parentName:"p"},"Arduino IDE")," en su PC.\n2.De click en ",(0,r.kt)("inlineCode",{parentName:"p"},"Herramientas")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"Tarjeta")," para seleccionar el modelo correcto de tarjeta de desarrollo. Seleccione ",(0,r.kt)("strong",{parentName:"p"},"Arduino/Genuino Uno")," como tarjeta."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/board.png",alt:null})),(0,r.kt)("p",null,"3.De click en ",(0,r.kt)("inlineCode",{parentName:"p"},"Herramientas")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"Puerto")," para seleccionar el puerto correcto (El puerto serial mostado anteriormente en el Administrador de Dispositivos). En este caso, ",(0,r.kt)("inlineCode",{parentName:"p"},"COM6")," ha sido seleccionado. ",(0,r.kt)("strong",{parentName:"p"},"Para usuarios de MacOs"),", deber\xe1 ser ",(0,r.kt)("inlineCode",{parentName:"p"},"/dev/cu.SLAB_USBtoUART"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/port.png",alt:null})),(0,r.kt)("p",null,"4.Cree un nuevo archivo de Arduino y nombrelo ",(0,r.kt)("inlineCode",{parentName:"p"},"Hello.ino"),", seguido copie el siguiente c\xf3digo en el:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Cpp"},'void setup() {\n  Serial.begin(9600); // Iniciaci\xf3n del monitor serial con una velocidad de 9600 baudios\n}\nvoid loop() {\n  Serial.println("Hola, Mundo "); // Imprici\xf3n de una cadena en el monitor \n  delay(1000); //Espera de 1 segundo\n}\n')),(0,r.kt)("p",null,"5.En la esquina superior izquierda del Arduino IDE, encontrar\xe1 dos botones, ",(0,r.kt)("strong",{parentName:"p"},"Verificar y Subir"),". Primero, presione el bot\xf3n de Verificar (\u2713) para compilar. Despu\xe9s de que la complilaci\xf3n sea existosa, presione el bot\xf3n de Subir (\u2192)."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/func.png",alt:null})),(0,r.kt)("p",null,"6.Navegue a ",(0,r.kt)("inlineCode",{parentName:"p"},"Herramientas")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"Monitor Serial"),", o de click en ",(0,r.kt)("strong",{parentName:"p"},"Monitor Serial")," en la esquina superior derecha (Simbolo de lupa), podr\xe1 ver los resultados del programa ejecutandose: "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/print.png",alt:null})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Nota:")," Si ha instalado la vesi\xf3n portable del Arduino IDE desde nuestra unidad USB, podr\xe1 encontrar todas las demostraciones en ",(0,r.kt)("strong",{parentName:"p"},"Archivos")," -> ",(0,r.kt)("strong",{parentName:"p"},"Sketch Book"),", as\xed como todas las librer\xedas de los m\xf3dulos, \xa1Estas se encuentran instaladas en el IDE de Arduino!"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/Sketchbook.png",alt:null})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Nota:"),"\nTodos los m\xf3dulos se encuentran previamente cabledos en una sola tarjeta electr\xf3nica, por lo tanto no es necesario utilizar cables o soldadura. En cualquier caso, si desea separarlos y utilizarlos por medio de cables Grove, por favor revise la gu\xeda de separaci\xf3n cuidadosamente."),(0,r.kt)("h2",{id:"gu\xeda-de-lecciones"},"Gu\xeda de Lecciones"),(0,r.kt)("h3",{id:"lecci\xf3n-1-parpadeo-con-el-led"},"Lecci\xf3n 1: Parpadeo con el LED"),(0,r.kt)("p",null,'Ya hemos completado el programa de salida "Hola, mundo". Ahora, aprendamos como iluminar el m\xf3dulo LED. Sabemos los tres componentes b\xe1sicos de un sistema de control: Entrada, Control y Salida. Sin embargo, la iluminaci\xf3n del LED utlizada solamente el concepto de Salida. Seeeduino es la unidad de control, el m\xf3dulo LDES es una unidad de salida, y la salida generada es una se\xf1al digital.'),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Informaci\xf3n de Contexto"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\xbfQu\xe9 es una se\xf1al digital?"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Se\xf1al Digital:")," Una se\xf1al Digital refiere a que el valor de la amplitud de esta es discreta, la amplitud est\xe1 limitada a un n\xfamero finito de valores. En nuestro controlador, las se\xf1ales digitales cuentan con dos estados: ",(0,r.kt)("em",null,"LOW")," (0V) para 0; ",(0,r.kt)("em",null,"HIGH(5V)")," para 1. Entonces, enviando una se\xf1al ",(0,r.kt)("em",null,"HIGH")," o positiva al LED podremos encenderlo."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/digital.png",alt:"Alt text"})),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Components Involved"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"1. Seeeduino Lotus\n2. Grove LED\n3. Grove Cable(Si ha sido desprendido)\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/LED.png",alt:null})),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Conexi\xf3n del Hardware"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"- **Conexi\xf3n del M\xf3dulo**\n    - Conexi\xf3n por defecto con <em>Stamp holes</em> en el PCB. \n- Conecte el Seeeduino por medio del cable USB a la computadora. \n")),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"C\xf3digo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"- Abra el Arduino IDE.\n- Copie el siguiente c\xf3digo, de click en Verificar para revisar errores en la sintaxis. Verifique que no hay ningun error, y carge el c\xf3digo. \n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Cpp"},"//LED Blink\n//El LED se encender\xe1 un segundo y se apagar\xe1 al siguiente\nint ledPin = 4;\nvoid setup() {\n    pinMode(ledPin, OUTPUT);\n}\nvoid loop() {\n    digitalWrite(ledPin, HIGH);\n    delay(1000);\n    digitalWrite(ledPin, LOW);\n    delay(1000);\n}\n")),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"An\xe1lisis del C\xf3digo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"setup(){\n}\n")),(0,r.kt)("p",null,"La funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"setup()")," es llamada cuando el sketch comienza. Util\xedcelo para inicializar variables, configuraciones de los pines, utilizar librer\xedas, etc. La funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"setup()")," ser\xe1 ejecutada una sola vez cada vez que la tarjeta Arduino sea reiniciada o encendida. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"loop(){\n}\n")),(0,r.kt)("p",null,"Despu\xe9s de crear  la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"setup()"),", la cual inicializa y configura los valores inciales. La funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"loop()")," es precisamente lo que el nombre suguire, y crea un bucle consecutivo, permitiendo a tu programa cambiar y responder. Util\xedcelo para controlar la actividad de la tarjeta Arduino. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int ledPin = 4;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descipci\xf3n:")),(0,r.kt)("p",null,"Convierte un valor al tipo de dato int."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,"int(",(0,r.kt)("strong",{parentName:"p"},"x"),") o (int)",(0,r.kt)("strong",{parentName:"p"},"x")," (Conversi\xf3n t\xedpica en C)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Par\xe1metros:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"x"),": un valor. Permite tipos de datos: cualquier valor."),(0,r.kt)("p",null,"Asigna a una variable ",(0,r.kt)("inlineCode",{parentName:"p"},"int")," el 4 y nombrela ledPin."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"pinMode(ledPin, OUTPUT);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Configura el pin especificado para comportarse como input o output (Entrada o Salida). Vea la p\xe1gina de Pines Digitales para m\xe1s detalles de la funcionalidad de los pines. Desde la versi\xf3n 1.0.1 de Arduino, es posible habilitar las resistencias pull-up internas utilizando el modo ",(0,r.kt)("inlineCode",{parentName:"p"},"INPUT_PULLUP"),". Adicionalmente, el modo ",(0,r.kt)("inlineCode",{parentName:"p"},"INPUT")," explicitamente desactiva los pull-ups internos. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis")),(0,r.kt)("p",null,"pinMode(",(0,r.kt)("strong",{parentName:"p"},"pin, mode"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Par\xe1metros:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"pin"),": El n\xfamero de pin de Arduino a configurar."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"modo"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"INPUT"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"OUTPUT"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"INPUT_PULLUP"),"."),(0,r.kt)("p",null,"Configure ledPin como OUTPUT. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"digitalWrite(ledPin, HIGH);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Escribe un valor ",(0,r.kt)("inlineCode",{parentName:"p"},"HIGH")," o ",(0,r.kt)("inlineCode",{parentName:"p"},"LOW")," al pin digital. ."),(0,r.kt)("p",null,"Si el pin ha sido consigurado como salida, OUTPUT, usando pinMode(), el valor del voltaje corresponder\xe1 al valor de: 5V (o 3.3V en tarjetas a 3.3V) para ",(0,r.kt)("inlineCode",{parentName:"p"},"HIGH"),", 0V(Tierra) para ",(0,r.kt)("inlineCode",{parentName:"p"},"LOW"),"."),(0,r.kt)("p",null,"Si el pin se encuentra configurado como INPUT, digitalWrite() habilitar\xe1 (HIGH) o dehabilitar\xe1 (LOW) las resistencias pull-up internas en el pin de entrada. Es recomendable configurar el pinMode() a ",(0,r.kt)("inlineCode",{parentName:"p"},"INPUT_PULLUP")," para habilitar las resistencias. Vea el tutorial de Pines Digitales para m\xe1s informaci\xf3n."),(0,r.kt)("p",null,"Si no configura el pinMode() como salida, y conecta un LED en el pin, cuando la funcion digitalWrite(HIGH) sea llamada, el LED podr\xeda aparecer If you do not set the pinMode() to OUTPUT, and connect an LED to a pin, when calling digitalWrite(HIGH), el LED podr\xeda tener una tenue iluminaci\xf3n. Sin una consiguraci\xf3n explicita pinMode(), digitalWrite() habilitar\xe1 las resistencias internas, las cuales actuar\xe1n como una resistencia limitadora de corriente."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,"digitalWrite(",(0,r.kt)("strong",{parentName:"p"},"pin, value"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Par\xe1metros:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"pin"),":  El n\xfamero del pin Arduino a configurar."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Valor"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"HIGH")," o ",(0,r.kt)("inlineCode",{parentName:"p"},"LOW"),"."),(0,r.kt)("p",null,"Cuando configuramos el ledPin como salida, HIGH significaba la instrucci\xf3n de mandar un voltaje positivo al pin, y el LED encendera."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"digitalWrite(ledPin, LOW);\n")),(0,r.kt)("p",null,"De igual manera, cuando el led configurado recibe una se\xf1al baja o 0V, este se apaga."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"delay(1000);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Pausa el programa por la cantidad de tiempo (en milisegundos) especificadas como parametro. (1000 milisegundos corresponden a un segundo). "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,"delay(",(0,r.kt)("strong",{parentName:"p"},"ms"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Par\xe1metros:")," "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ms"),": El n\xfamero de milisegundo a pausar. Permite el tipo de dato: unsigned long."),(0,r.kt)("p",null,"El programa espera por 1000ms(1s)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Demostraci\xf3n del Efecto y Resutado Serial Print:")),(0,r.kt)("p",null,"El m\xf3dulo LED estar\xe1 un segundo encendido y uno apagado. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Ajuste del Brillo del LED")),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/LED-res.jpeg"})),(0,r.kt)("p",null,"En el m\xf3dulo Grove LED, encontrar\xe1s una On the Grove LED module, there is a ",(0,r.kt)("strong",{parentName:"p"},"resistencia variable que puede ser ajustada usando un desatornillador.")," \xa1Giralo para hacer el LED un m\xe1s brillante! "),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Gu\xeda de Separaci\xf3n"),(0,r.kt)("p",null,"Si el m\xf3dulo ha sido separado de la tarjeta. Util\xedce cables Grove para conectarlo a puerto digital ",(0,r.kt)("strong",{parentName:"p"},"D4")," del Seeeduino Lotus.  "),(0,r.kt)("h3",{id:"lecci\xf3n-2-presionando-un-bot\xf3n-para-encender-el-led"},"Lecci\xf3n 2: Presionando un bot\xf3n para encender el LED"),(0,r.kt)("p",null,"La primero que necesitas saber es que un bot\xf3n es una entrada digital, lo cual quiere decir que solo tendremos dos estados: 0 o 1, con ello podremos controlar la salida. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Pr\xe1ctica:")," Util\xedce el boton para encender y apagar el m\xf3dulo lED. ")),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Componentes Involucrados"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"1. Seeeduino Lotus\n2. Grove LED\n3. Grove Button\n4. Grove Cables(Si ha sido separado)\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/Button.png",alt:null})),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Conexi\xf3n del Hardware "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"- **Conexi\xf3n del M\xf3dulo:**\n    - Conexi\xf3n por defecto con <em>Stamp holes</em> en el PCB.\n- El Seeeduino deber\xe1 encontrarse conectado a la computadora via USB. \n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Anal\xedsis del Hardware"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Input: Bot\xf3n"),(0,r.kt)("li",{parentName:"ul"},"Control: Seeeduino"),(0,r.kt)("li",{parentName:"ul"},"Output: M\xf3dulo LED")))),(0,r.kt)("p",null,"Ambos, el sensor y el LED, deber\xe1n usar se\xf1ales digitales, por lo tanto deber\xe1n estar conectados a puertos digitales."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"C\xf3digo"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Abra el IDE de Arduino."),(0,r.kt)("li",{parentName:"ul"},"Copie el siguiente c\xf3digo, de click en Verificar para comprobar que no haya alg\xfan error en la sintaxis. Verifique que no hay ning\xfan error, y suba el c\xf3digo. ")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Cpp"},"//Bot\xf3n para encender y apagar un LED\n//Las constantes no cambiaran. Los usaremos aqui para determinar los pines a utilizar:\nconst int buttonPin = 6;     // El n\xfamero del pin asignado al bot\xf3n\nconst int ledPin =  4;      //El n\xf9mero del pin asignado al LED\n\n// Variables que cambiaran:\nint buttonState = 0;         // Variable para almacenar el estado de bot\xf3n\n\nvoid setup() {\n  // Inicializaci\xf3n del pin del LED como Output:\n  pinMode(ledPin, OUTPUT);\n  // Inicializaci\xf3n del pin del Bot\xf3n como entrada:\n  pinMode(buttonPin, INPUT);\n}\n\nvoid loop() {\n  // Leemos el estado del bot\xf3n, almacenandolo en nuestra variable\n  buttonState = digitalRead(buttonPin);\n\n  // Revisamos si el bot\xf3n se encuentra presionado. Si es as\xed el estado del bot\xf3n es HIGH:\n  if (buttonState == HIGH) {\n    // Encendemos el LED:\n    digitalWrite(ledPin, HIGH);\n  } else {\n    // Apagamos el LED:\n    digitalWrite(ledPin, LOW);\n  }\n}\n")),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Anal\xedsis del C\xf3digo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"pinMode(ledPin, OUTPUT);\n")),(0,r.kt)("p",null,"Definimos el LED c\xf3mo salida. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"pinMode(buttonPin, INPUT);\n")),(0,r.kt)("p",null,"Definimos el bot\xf3n como una unidad de entrada."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"buttonState = digitalRead(buttonPin);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Lee el valor del pin especificado, sea ",(0,r.kt)("inlineCode",{parentName:"p"},"HIGH")," o ",(0,r.kt)("inlineCode",{parentName:"p"},"LOW"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,"digitalRead(",(0,r.kt)("strong",{parentName:"p"},"pin"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Par\xe1metros:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"pin"),": El n\xfamero del ",(0,r.kt)("inlineCode",{parentName:"p"},"pin")," de Arduino que desee leer."),(0,r.kt)("p",null,"La funci\xf3n es utilizada para leer los estados de los pines digitales, sea HIGH o LOW. Cuando el bot\xf3n sea presionado, el estado ser\xe1 HIGH, de otra manera ser\xe1 LOW."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"  if (buttonState == HIGH) {\n    digitalWrite(ledPin, HIGH);\n  } else {\n    digitalWrite(ledPin, LOW);\n  }\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Las condicionales if..else permiten un mejor control sobre el flujo del c\xf3digo que la declaraci\xf3n if b\xe1sica, permitiendo multiples revisiones de manera agrupada. La clausula else (Si al menos un IF existe) ser\xe1 ejecutada siempre que las condiciones en las declaraciones if resulten falsas. El else puede proceder como otra prueba if, entonces multiples pruebas exclusivas pueden ser probadas al mismo tiempo. "),(0,r.kt)("p",null,"Cada prueba va a proceder a la siguiente hasta que se encuentre una que de un resultado positivo. Cuando un resultado positivo es encontrado, el bloque de c\xf3digo asociado a la prueba ser\xe1 ejecutado, y el programa pasar\xe1 el resto de los bloques if/else construidos. Si ninguna prueba es verdadera, el bloque predeterminado else ser\xe1 ejecutado, si existe alguno, determinando del comportamiento por defecto. "),(0,r.kt)("p",null,"Note que el bloque else if puede ser usado con o sin un bloque else para terminar el ciclo, o viceversa. Un n\xfamero ilimitado de bloques else if pueden ser implementados. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"if (condition1) {\n  // Haz cosa A \n}\nelse if (condition2) {\n  // Haz cosa B\n}\nelse {\n  // Haz cosa C\n}\n")),(0,r.kt)("p",null,"El uso de la declaraci\xf3n es: si la expresi\xf3n l\xf3gica en el par\xe9ntesis es verdadera, ejecuta la declaraci\xf3n dentro de las llaves despu\xe9s del IF, si no, ejecuta la declaraci\xf3n dentro de las llaves de else. Si el estado del bot\xf3n es HIGH, el pin de salida del LED recibir\xe1 un voltaje positivo y encender\xe1 el LED, en caso contrario se apagar\xe1. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Efecto de prueba y resultado Serial Print:")),(0,r.kt)("p",null,"Presionado el bot\xf3n logremos encender el m\xf3dulo LED."),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Gu\xeda de Separaci\xf3n"),(0,r.kt)("p",null,"Use el cable Grove para conectar el Grove LED al puerto digital ",(0,r.kt)("strong",{parentName:"p"},"D4")," del Seeeduino Lotus. Conecte el bot\xf3n Grove al puerto digital ",(0,r.kt)("strong",{parentName:"p"},"D6"),"."),(0,r.kt)("h3",{id:"lecci\xf3n-3-controlando-la-frecuencia-de-parpadeo"},"Lecci\xf3n 3: Controlando la Frecuencia de Parpadeo"),(0,r.kt)("p",null,"En la secci\xf3n anterior, hemos estudiado que un bot\xf3n solamente tiene dos estados, ON/OFF que corresponden a 0V y 5V, pero en la pr\xe1ctica, necesitamos m\xe1s estados, no solamente 0V y 5v. Por lo tanto, \xa1Necesitamos usar se\xf1ales anal\xf3gicas! Un potenci\xf3metro rotatorio es un cl\xe1sico ejemplo de utilizaci\xf3n de se\xf1ales anal\xf3gicas. "),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Informaci\xf3n de Contexto:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\xbfQu\xe9 es una se\xf1al anal\xf3gica?"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Se\xf1ales Anal\xf3gicas:")," Las se\xf1ales varian continuamente en tiempo, valor, amplitud, frecuencia y fase en cualquier momento, tal como una grabaci\xf3n de se\xf1ales de audio o se\xf1al de imagen, etc. La seg\xf1al anal\xf3gica ondas senoidales o triangulares. Los pines anal\xf3gicos de su microcontrolador puede tener entre 0 y 5v un rango entre 0 y 1023 respectivamente, donde 1023 se encuentra referenciado a 5V, as\xed como 512 a 2.5V. "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/analog.png",alt:"Alt text"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Componentes Involucrados"),"1. Seeeduino Lotus 2. Grove LED 3. Grove Potenci\xf3metro rotatorio 4. Grove Cables(Si ha sido separado)")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/rotary.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Conexi\xf3n del Hardware"),"- **Conexi\xf3n del M\xf3dulo:** - Conexi\xf3n por defecto con ",(0,r.kt)("em",null,"Stamp holes")," en el PCB. - El Seeeduino deber\xe1 encontrarse conectado a la computadora via USB."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Hardware an\xe1lisis:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Input: Potenci\xf3metro rotatorio"),(0,r.kt)("li",{parentName:"ul"},"Control: Seeeduino Lotus"),(0,r.kt)("li",{parentName:"ul"},"Output: M\xf3dulo LED")))),(0,r.kt)("p",null,"La entrada es una se\xf1al anal\xf3gica, por lo tanto se encuentra conectada a un puerto de interfaz anal\xf3gica, mientras que el m\xf3dulo LED se encuentra conectado a un puerto de interfaz digital."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"C\xf3digo"),"- Abra el IDE de Arduino. - Copie el siguiente c\xf3digo, de click en Verificar para comprobar que no haya alg\xfan error en la sintaxis. Verifique que no hay ning\xfan error, y suba el c\xf3digo.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Cpp"},"//Control rotatorio para LED\nint rotaryPin = A0;    // Selecci\xf3n de entrada para el potenci\xf3metro\nint ledPin = 4;      // Selecci\xf3n de salida para el LED\nint rotaryValue = 0;  // Variable que almacena la informaci\xf3n entrante por la rotaci\xf3n. \nvoid setup() {\n  // Declare el ledPin como salida. \n  pinMode(ledPin, OUTPUT);\n  pinMode(rotaryPin, INPUT);\n}\n\nvoid loop() {\n  // Lee el valor del sensor, en este caso el potenci\xf3metro. \n  rotaryValue = analogRead(rotaryPin);\n  // Enciende el LED\n  digitalWrite(ledPin, HIGH);\n  // Mantiene el programa dependiendo el <rotaryvalue> valor del sensor en millisegundos.\n  delay(rotaryValue);\n  // Apaga el LED:\n  digitalWrite(ledPin, LOW);\n  // Mantiene el programa dependiendo el <rotaryValue> valor del sensor en millisegundos.\n  delay(rotaryValue);\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"An\xe1lisis del C\xf3digo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int rotaryPin = A0;    //Selecci\xf3n del pin para el potenci\xf3metro\nint ledPin = 4;      // Selecci\xf3n del pin para el LED\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Te habr\xe1s dado cuenta que definimos el rotatePin y ledPin de diferentes maneras. Esto es porqu\xe9 el Potenci\xf3metro rotatorio genera una se\xf1al anal\xf3gica, y el LED es controlado por medio de una digital. "),(0,r.kt)("p",null,"Para ",(0,r.kt)("strong",{parentName:"p"},"definir un pin Anal\xf3gico"),", utilice A + el n\xfamero del pin (Por ejemplo, ",(0,r.kt)("inlineCode",{parentName:"p"},"A0"),")."),(0,r.kt)("p",null,"Para ",(0,r.kt)("strong",{parentName:"p"},"definir un pin Digital"),", utilice solamente el n\xfamero de pin (Por ejemplo, ",(0,r.kt)("inlineCode",{parentName:"p"},"4"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"rotaryValue = analogRead(rotaryPin);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Leer el valor espec\xedfico de un pin Anal\xf3gico. Las tarjetas de arduino cuentan con un convertidor multicanal de 10 bits anal\xf3gico a digital. Esto significa que puede captar voltajes entre 0 y el voltaje de operaci\xf3n (Ya sea 5 o 3.3V), y registrarlos en valores entre 0 y 1023 respectivamente. En el Arduino UNO, por ejemplo, esto representa una resoluci\xf3n de lectura de: 5 volts / 1024 unidades, o 0.0049 volts (4.9mV) por unidad. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,"analogRead(",(0,r.kt)("strong",{parentName:"p"},"pin"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Par\xe1metros:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"pin"),": El nombre del puerto anal\xf3gico a leer (De A0 a A5 en la mayoria de las tarjetas). "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," La lectura anal\xf3gica del pin. Sin embargo, se encuentra limitado a la resoluci\xf3n del convertidor anal\xf3gico-digital (0-1023 para 10 bits o 0-4095 para 12 bits) Tipo de Dato: int. "),(0,r.kt)("p",null,"Esta funci\xf3n es usada para leer el valor del pin Anal\xf3gico (posici\xf3n del potenci\xf3metro rotatorio), el rango de valores es de: 0 ~ 1023."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"delay(rotaryValue);\n")),(0,r.kt)("p",null,"Funci\xf3n Delay. La duraci\xf3n en millisegundos del delay es el valor entre par\xe9ntesis. Esto porque el valor es el valor de la se\xf1al anal\xf3gica recibida en cada movimiento del pin leido, entonces el tiempo del delay puede ser controlado por dicho movimiento."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Demostraci\xf3n del Efecto y Resutado Serial Print:")),(0,r.kt)("p",null,"EL movimiento del potenci\xf3metro podr\xe1 cambiar la frecuencia de parpadeo del LED."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Gu\xeda de Separaci\xf3n"))),(0,r.kt)("p",null,"Utilice un cable Grove para conectar el m\xf3dulo LED a la interfaz digital ",(0,r.kt)("strong",{parentName:"p"},"D4")," del Seeeduino Lotus, y un cable Grove para conectar el Potenci\xf3metro a la interfaz anal\xf3gica ",(0,r.kt)("strong",{parentName:"p"},"A0"),"."),(0,r.kt)("h3",{id:"lecci\xf3n-4-haciendo-el-zumbador-sonar-beep"},"Lecci\xf3n 4: Haciendo el Zumbador sonar BEEP"),(0,r.kt)("p",null,"Al igual que el m\xf3dulo LED, el Zumbador es un m\xf3dulo de salida, pero en lugar de encender una luz produce un sonido particular. Esto puede ser usado en multiples situaci\xf3nes para indicar prop\xf3sitos. Estudiamos el uso del potenci\xf3metro en la ultima secci\xf3n entonces, \xbfC\xf3mo podemos usar el potenci\xf3metro para controlar el volumen de nuestro Zumbador? La respuesta ... \xa1Esto requiere el uso de control PWM! "),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Informaci\xf3n de Contexto:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\xbfQu\xe9 es el PWM?"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Modulaci\xf3n del ancho de Pulso, \xf3 PWM (Por sus siglas en ingl\xe9s)"),', es una t\xe9cnica para obtener resultados anal\xf3gicos con puertos digitales. Se utiliza control digital para crear ondas cuadradas, una se\xf1al entre encendio y apagado. Este patr\xf3n on-off, puede simular voltajes entre 5V y 0V cambiando la porci\xf3n de tiempo que la se\xf1al de encendido es lanzada en relaci\xf3n al tiempo de la se\xf1al de apagado. La duraci\xf3n "en-tiempo" (ON TIME) es llamada ancho de pulso. Para obtener variaciones en lo valores anal\xf3gicos, se m\xf3dula o cambia el ancho de pulso a criterio del usuario. Si este patron se repite lo suficientemente r\xe1pido con el LED, por ejemplo, tendr\xedamos c\xf3mo resultado un control del brillo del mismo, ya que la se\xf1al estar\xe1 proporcionando un voltaje estable entre 0 y 5 volts. ',(0,r.kt)("em",{parentName:"p"},"Reference: ",(0,r.kt)("a",{parentName:"em",href:"https://www.arduino.cc/en/tutorial/PWM"},"Arduino"))),(0,r.kt)("p",null,"Como lo indica el siguiente diagrama, el uso de ",(0,r.kt)("inlineCode",{parentName:"p"},"analogWrite()")," para generar pulsos pwm, entre m\xe1s alto sea el ciclo de trabajo, con m\xe1s fuerza sonar\xe1 el zumbador."),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/BuzzerPWM.jpg"})),(0,r.kt)("p",null,'El Seeeduino cuenta con 6 pines digitales que se encuentran marcados con el s\xedmbolo "~", esto significa que dichos puertos puden general se\xf1ales PWM: 3,5,6,9,10,11. Son conocidos como puertos PWM.'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Componentes Involucrados"),"1. Seeeduino Lotus 2. Grove Zumbador (Buzzer) 3. Grove Cable(Si ha sido separado)")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/Buzzer.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Conexi\xf3n del Hardware"),"- **Conexi\xf3n del M\xf3dulo:** - Conexi\xf3n por defecto con ",(0,r.kt)("em",null,"Stamp holes")," en el PCB. - El Seeeduino deber\xe1 encontrarse conectado a la computadora via USB."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"C\xf3digo"),"- Abra el IDE de Arduino. - Copie el siguiente c\xf3digo, de click en Verificar para comprobar que no haya alg\xfan error en la sintaxis. Verifique que no hay ning\xfan error, y suba el c\xf3digo.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Cpp"},"int BuzzerPin = 5;\nint Potentiometer = A0;\n\nvoid setup() {\n  pinMode(BuzzerPin, OUTPUT);\n  pinMode(Potentiometer, INPUT);\n}\n\nvoid loop() {\n  int potentioValue, Value;\n  potentioValue = analogRead(Potentiometer);\n  Value = map(potentioValue, 0, 1023, 0, 255); //Mapping potentiometer value to PWM signal value\n  analogWrite(BuzzerPin, Value);\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"An\xe1lisis del C\xf3digo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Value = map(potentioValue, 0, 1023, 0, 255);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n")),(0,r.kt)("p",null,"Reasigna un n\xfamero de un rango a otro. Este es un valor ",(0,r.kt)("strong",{parentName:"p"},"fromLow")," ser\xe1 asignado a ",(0,r.kt)("strong",{parentName:"p"},"toLow"),", un valor  ",(0,r.kt)("strong",{parentName:"p"},"fromHigh")," a ",(0,r.kt)("strong",{parentName:"p"},"toHigh"),", valores intermedios de igual manera a los valores intermedios de la nueva asignaci\xf3n. "),(0,r.kt)("p",null,"No se restringen a los valores dentro del rango, pues muchas veces los valores fuera de este son intensionados y \xfatiles. La funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"constrain()")," puede ser usada antes y despu\xe9s de esta funci\xf3n, si se han limitado los rangos deseados."),(0,r.kt)("p",null,'Note que los "l\xedmites inferiores" o cualquier rango puede ser m\xe1s largo o m\xe1s corto que el "l\xedmite superior" . La funci\xf3n ',(0,r.kt)("inlineCode",{parentName:"p"},"map()")," pude ser utilizada para revertir un rango de n\xfameros, por ejemplo."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"y = map(x, 1, 50, 50, 1);")),(0,r.kt)("p",null,"La funci\xf3n puede manejar n\xfamero negativos de igual manera. Para ello este ejemplo."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"y = map(x, 1, 50, 50, -100);")),(0,r.kt)("p",null,"Es v\xe1lida y funciona bien."),(0,r.kt)("p",null,"La funci\xf3n map() trabaja con enteros, por lo tando no generar\xe1 fraciones, cuando las matem\xe1ticas puedan indicar que deba usarlas. Los restos fraccionales ser\xe1n truncados y redondeados sin ning\xfan problema. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,"map(",(0,r.kt)("strong",{parentName:"p"},"value, fromLow, fromHigh, toLow, toHigh"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Par\xe1metross:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"value"),": El dato a mapear. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"fromLow"),": El l\xedmite inferior del rango de valores actuales. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"fromHigh"),": El l\xedmite superior del rango de valores actuales."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"toLow"),": El l\xedmite inferior objetivo del nuevo rango de valores. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"toHigh"),": El l\xedmite superior objetivo del nuevo rango de valores."),(0,r.kt)("p",null,"Mapeando la se\xf1al anal\xf3gica de un Potenci\xf3mtero (0 a 1023) al volumen de un zumbador (0 a 255)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"analogWrite(BuzzerPin, Value);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Escribir un valor anal\xf3gico (PWM) en un puerto. Puede ser usado para variar la iluminaci\xf3n de un LED o variar la velocidad de un motor. Despu\xe9s de llamar a analogWrite), el puerto generar\xe1 una onda rectangular en el ciclo establecido hasta que la funci\xf3n sea interrumpida, m\xf3dificada o suplantada por digitalRead() o digitalWrite(). "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,"analogWrite(",(0,r.kt)("strong",{parentName:"p"},"pin, value"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Par\xe1metros:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"pin"),": El ",(0,r.kt)("inlineCode",{parentName:"p"},"pin")," de Arduino a escribir. Tipo de dato permitido: entero (int). "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"value"),": Ciclo de trabajo: entre ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," (simpre apagado) y ",(0,r.kt)("inlineCode",{parentName:"p"},"255")," (siempre encendido). Tipo de dato permitido: entero (int). "),(0,r.kt)("p",null,"Escribir un valor anal\xf3gico (PWM) al Zumbador."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Demostraci\xf3n del Efecto y Resutado Serial Print:")),(0,r.kt)("p",null,"Ajuste el potenci\xf3metro para ajustar el volumen del Beep del Zumbador. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Gu\xeda de Separaci\xf3n"),(0,r.kt)("p",{parentName:"li"},"Utilice un cable Grove para conectar el Zumbador al puerto digital ",(0,r.kt)("strong",{parentName:"p"},"D5")," del Seeeduino Lotus."))),(0,r.kt)("hr",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Uso del PWM"))),(0,r.kt)("p",null,"Ya que hemos aprendido el uso del PWM, adem\xe1s de utilizar el PWM para controlar el volumen del sonido del Zumbador, podemos utilizar PWM para controlar la velocidad de un motor, o el brillo de un LED, entre otras cosas. "),(0,r.kt)("p",null,"En cualquier caso, el m\xf3dulo LED del Grove Beginner Kit no pude ser usado directamente para controlarlo con PWM, ya que dicho m\xf3dulo se encuentra conectado al puerto D4, y como hemos mecionado anteriormente, solo los pines PWM son 3, 5, 6, 9, 10, 11. Si quiere controlar el LED con PWM, es necesario desprender el m\xf3dulo y conectarlo direcamnete por medio de un cable Grove a un puerto PWM funcional."),(0,r.kt)("p",null,'Consider\xe1ndo todo, cuando quiera usar la funci\xf3n PWM, aseg\xfarese de seleccionar un pin con el s\xedmbolo "~" frente a su nombre. '),(0,r.kt)("h3",{id:"lecci\xf3n-5--hacer-un-led-inductivo-de-luz"},"Lecci\xf3n 5:  Hacer un LED inductivo de LUZ."),(0,r.kt)("p",null,"El sensor de luz contiene una resistencia fotosensible para medir la intensidad de la luz. La resistencia del resistor fotosensible decrese con el crecimiento de la intensidad de la luz. El LED encender\xe1 cuando el entorno est\xe9 oscuro, y permanecer\xe1 apagado cuando el ambiente est\xe9 iluminado."),(0,r.kt)("p",null,"En las siguientes secciones, estaremos utilizando el Monitor Serial para observar los resultados de nuestros sensores, \xa1Aqu\xed viene una breve introducci\xf3n! "),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Informaci\xf3n de Contexto"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\xbfQu\xe9 es un Monitor Serial?"))),(0,r.kt)("p",null,"El Monitor Serial es \xfatil para observar resultados en Arduino, puede ser muy \xfatil en terminos de mostrar resultados de sensores, o en terminos de ",(0,r.kt)("em",null,"debugging")," en general. \xa1Tambi\xe9n puedes enviar informaci\xf3n de vuelta a tu controlador usando el monitor para realizar ciertas tareas!"),(0,r.kt)("p",null," Nota: Confirma que la informaci\xf3n transferida por Serial tenga relaci\xf3n con tu c\xf3digo. "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/Serial.jpg",alt:null})),(0,r.kt)("p",null,"Puedes abrir el Monitor Serial en ",(0,r.kt)("strong",{parentName:"p"},"Herramientas* -> "),"Monitor Serial**."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/20200217144001.jpg",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Componentes Involucrados"),"1. Seeeduino Lotus 2. Grove LED 3. Grove Light Sensor 4. Grove Cable(Si ha sido separado)")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/Light.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"}," Conexi\xf3n del Hardware"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Conexi\xf3n del M\xf3dulo:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Conexi\xf3n por defecto con ",(0,r.kt)("em",null,"Stamp holes")," en el PCB."))),(0,r.kt)("li",{parentName:"ul"},"El Seeeduino deber\xe1 encontrarse conectado a la computadora via USB. "))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"An\xe1lisis del Hardware:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Input: Sensor de Luz"),(0,r.kt)("li",{parentName:"ul"},"Control: Seeeduino Lotus"),(0,r.kt)("li",{parentName:"ul"},"Output: M\xf3dulo LED"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"C\xf3digo"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Abra el IDE de Arduino."),(0,r.kt)("li",{parentName:"ul"},"Copie el siguiente c\xf3digo, de click en Verificar para comprobar que no haya alg\xfan error en la sintaxis. Verifique que no hay ning\xfan error, y suba el c\xf3digo. ")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Cpp"},"// Switch de Luz\nint sensorpin = A6; // Pin anal\xf3gico donde el sensor se encuentra conectado.\nint ledPin = 4;    // Puerto del LED\nint sensorValue = 0;        // Valor leido desde el puerto.\nint outputValue = 0;        // Valor de salida para el PWM (Salida Anal\xf3gica)\n\nvoid setup() {\n  pinMode(ledPin,OUTPUT);\n  pinMode(sensorpin, INPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  // Lectura anal\xf3gica\n  sensorValue = analogRead(sensorpin);\n\n  Serial.println(sensorValue);\n\n  if (sensorValue < 200) {\n    digitalWrite(ledPin, LOW);\n  }\n  else {\n    digitalWrite(ledPin, HIGH);\n  }\n\n  delay(200);\n}\n")),(0,r.kt)("p",null,"Tambi\xe9n puedes ver la intensidad de la luz leyendo los valores desde el ",(0,r.kt)("strong",{parentName:"p"},"Monitor Serial"),", navega a ",(0,r.kt)("strong",{parentName:"p"},"Herramientas")," -> ",(0,r.kt)("strong",{parentName:"p"},"Monitor Serial"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"An\xe1lisis del C\xf3digo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Serial.begin(9600);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Configura la velocidad de transmisi\xf3n de datos en bits por segundos (baud) para la transmisi\xf3n de datos seriales. Para comunicarte con el Monitor Serial, aseg\xfarate de usar alguna de las tasas de lectura enlistadas en el men\xfa en el bot\xf3n de la esquina derecha en tu pantalla. En cualquier caso, puedes elegir otras velocidades, por ejemplo, para comunicarte con alg\xfan componente por medio de los pines 0 y 1, requieres una tasa de lectura en particular."),(0,r.kt)("p",null,"Un segundo argumento opcional para configurar la informaci\xf3n, paridad y alto de bits. Por defecto, este argumento es 8 bits de informaci\xf3n y un bit de alto."),(0,r.kt)("p",null,"El c\xf3digo ejecudandose en la computadora se comunica con la tarjeta de desarrollo, a una velocidad de transmisi\xf3n (baud rate) de 9600.\n",(0,r.kt)("strong",{parentName:"p"},"Sintaxis")),(0,r.kt)("p",null,"Serial.begin(",(0,r.kt)("strong",{parentName:"p"},"Velocidad"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Par\xe1metros:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Velocidad"),": Velocidad de comunicaci\xf3n Serial. i.e ",(0,r.kt)("inlineCode",{parentName:"p"},"9600"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"115200"),", etc\xe9tera. "),(0,r.kt)("p",null,"Configura la velocidad de transmisi\xf3n en 9600."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Serial.println(sensorValue);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Imprime la informaci\xf3n por medio del puerto ser\xedal en formato ASCII legible para humanos, seguido de un car\xe1cter de retorno (ASCII 13, or '\\r') y un car\xe1cter en una nueva linea (ASCII 10, or '\\n'). Este comando toma la misma forma de Serial.print()."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,"Serial.println(",(0,r.kt)("strong",{parentName:"p"},"valor"),") or Serial.println(",(0,r.kt)("strong",{parentName:"p"},"valor"),", ",(0,r.kt)("strong",{parentName:"p"},"formato"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Par\xe1metros:")," "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"valor"),": El valor a imprimir. Tipos de datos permitidos: Cualquier tipo."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"formato"),": Especifica la base n\xfamerica (para tipos de datos enteros) o el n\xfamero de decimales (en tipos de punto flotante)."),(0,r.kt)("p",null,"El puerto serial imprime el valor del sensor de Luz. Abre el ",(0,r.kt)("strong",{parentName:"p"},"Monitor Serial")," en la interfaz del IDE, y podr\xe1s ver los valores resultantes de la salida del sensor. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Demostraci\xf3n del Efecto y Resutado Serial Print:")),(0,r.kt)("p",null,"El m\xf3dulo LED se encender\xe1 cuando se encuentre oscuro, y se mantendr\xe1 apagado mientras haya luz."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Gu\xeda de Separaci\xf3n"))),(0,r.kt)("p",null,"Utilice los cables Grove para conectar el LED Grove al puerto digital ",(0,r.kt)("strong",{parentName:"p"},"D4")," del Seeeduino Lotus, as\xed mismo conecte el Sensor de Luz Grove en el puerto anal\xf3gico ",(0,r.kt)("strong",{parentName:"p"},"A6")," del controlador. "),(0,r.kt)("h3",{id:"lecci\xf3n-6-led-sensible-al-sonido"},"Lecci\xf3n 6: LED sensible al sonido."),(0,r.kt)("p",null,"El sensor de sonido puede detectar la intensidad del sonido en el ambiente, y su salida es simulada. Seguramente has presenciado controles de luz por sonido, pero ahora podremos hacer uno nosotros mismos, y con las bases, este experimento ser\xe1 realmente f\xe1cil para ti. Usaremos el Graficador Serial para poder visualizar los resultados."),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Informaci\xf3n de Contexto:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\xbfQu\xe9 es el Graficador Serial?"))),(0,r.kt)("p",null,"El Graficator Serial o Serial Plotter es muy similar con el  is similar to Serial Monitor, permitiendote gr\xe1ficar de manera nativa la informaci\xf3n obtenida de tu Arduino en tiempo real. Esto es muy \xfatil cuando la informaci\xf3n necesita ser visualizada.."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/SerialPlotter.png",alt:null})),(0,r.kt)("p",null,"Puedes abrir el Graficador Serial dando click en ",(0,r.kt)("strong",{parentName:"p"},"Herramientas")," -> ",(0,r.kt)("strong",{parentName:"p"},"Graficador Serial")," \xf3 ",(0,r.kt)("strong",{parentName:"p"},"Serial Plotter"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/serialplot.jpg",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Pr\xe1ctica:")," El LED se enciende cuando alg\xfan sonido se realiza. Cuando no exista alg\xfan sonido y se encuentra muy silecioso, el LED se apaga.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Componentes Involucrados"),"1. Seeeduino Lotus 2. Grove LED 3. Grove Sound Sensor 4. Grove cable(Si ha sido separado)")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/Sound.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Conexi\xf3n del Hardwaree"),"- **Conexi\xf3n del M\xf3dulo:** - Conexi\xf3n por defecto con ",(0,r.kt)("em",null,"Stamp holes")," en el PCB. - El Seeeduino deber\xe1 encontrarse conectado a la computadora via USB.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"C\xf3digo"),"- Abra el IDE de Arduino. - Copie el siguiente c\xf3digo, de click en Verificar para comprobar que no haya alg\xfan error en la sintaxis. Verifique que no hay ning\xfan error, y suba el c\xf3digo.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Cpp"},"//Control de luz por sonido\nint soundPin = A2; // El sensor de sonido es anal\xf3gico, por ello se conecta en este pin.\nint ledPin = 4; // LED Digital se conectar\xe1 en un puerto Digital.\nvoid setup() {\n  pinMode(ledPin, OUTPUT);\n  pinMode(soundPin, INPUT);\n  Serial.begin(9600);\n}\nvoid loop(){\n  int soundState = analogRead(soundPin); //Lectura de los valores del sensor de sonido.\n  Serial.println(soundState);\n  //Si el sonido detectado en el sensor, es mayor a las 400 unidades, la luz ser\xe1 encendida.\n  //De otra manera, la luz se mantendr\xe1 apagada.\n  if (soundState > 400) {\n    digitalWrite(ledPin, HIGH);\n    delay(100);\n  }else{\n    digitalWrite(ledPin, LOW);\n  }\n}\n")),(0,r.kt)("p",null,"Tambi\xe9n podr\xe1s ver las lecturas de intensidad de luz en el  ",(0,r.kt)("strong",{parentName:"p"},"Graficador Serial \xf3 Serial Plotter"),", navega a ",(0,r.kt)("strong",{parentName:"p"},"Herramientas")," -> ",(0,r.kt)("strong",{parentName:"p"},"Graficador Serial \xf3 Serial Plotter"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Nota: Puedes adem\xe1s ajustar el valor acorde a la intensidad de luz de tu entorno.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"An\xe1lisis del C\xf3digo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Serial.begin(9600);\n")),(0,r.kt)("p",null,"El software ejecutandose en la computadora se comunica con la tarjeta de desarrollo, y la velocidad de transmisi\xf3n es de 9600."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'Serial.print(" ");\n')),(0,r.kt)("p",null,"La funci\xf3n es usada como salida de informaci\xf3n desde el puerto serial, la salida esThis function is used to output data from the serial port, la salida ser\xe1 contenida dentro de las comillas."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Serial.println( );\n")),(0,r.kt)("p",null,"La declaraci\xf3n es similar a la que se encuentra arriba, excepto que ",(0,r.kt)("strong",{parentName:"p"},"serial.println")," tiene una nueva linea de retorno."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Serial.println(soundState);\n")),(0,r.kt)("p",null,"El puerto serial imprime el valor del sensor de sonido. Entonces, abre el ",(0,r.kt)("strong",{parentName:"p"},"Monitor Serial")," en el IDE de Arduino, y podr\xe1s visualizar la informaci\xf3n de salida del sensor."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Demostraci\xf3n del Efecto y Resutado Serial Print:")),(0,r.kt)("p",null,"El m\xf3dulo de LED se encender\xe1 si el  sonido ambiental es lo suficientemente alto."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Gu\xeda de Separaci\xf3n"))),(0,r.kt)("p",null,"Usa los cables Grove para conectar el LED Grove a la interfaz digital ",(0,r.kt)("strong",{parentName:"p"},"D4")," del Seeeduino Lotus, acto seguido conecta el sensor Grove se sonido en la interfaz anal\xf3gica ",(0,r.kt)("strong",{parentName:"p"},"A2"),". "),(0,r.kt)("h3",{id:"lecci\xf3n-7-mostando-datos-en-un-oled"},"Lecci\xf3n 7: Mostando Datos en un OLED"),(0,r.kt)("p",null,"El Display OLED puede ser usado en muchas situaciones, \xa1Puedes usarlo para visualizar la informaci\xf3n de tus sensores!"),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Informaci\xf3n de Contexto"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\xbfQu\xe9 son las librer\xedas de Arduino?"))),(0,r.kt)("p",null,"El ambiente de Arduino puede ser extendido atraves del uso de librer\xedas, al igual que la mayoria de las plataformas de programaci\xf3n. Las librer\xedas proveeen funcionalidades extras para usar en los sketch, trabajando con hardware espeficico o manipulando datos. Para usar una librer\xeda en un sketch, seleccionala desde ",(0,r.kt)("strong",{parentName:"p"},"Sketch"),"->",(0,r.kt)("strong",{parentName:"p"},"Incluir Librer\xeda"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/zip.jpg",alt:null})),(0,r.kt)("p",null,"For more information, please also visit ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library/"},"How to install Arduino Libraries"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Componentes Involucrados"),"1. Seeeduino Lotus 2. Grove OLED 3. Grove cable(Si ha sido separado)")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/OLED.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Conexi\xf3n del Hardware"),"- **Conexi\xf3n del M\xf3dulo:** - Conexi\xf3n por defecto con ",(0,r.kt)("em",null,"Stamp holes")," en el PCB. - El Seeeduino deber\xe1 encontrarse conectado a la computadora via USB."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"C\xf3digo"),'- Abra el IDE de Arduino . - Instale **U8g2 library**: Navegue a **Sketch** -> **Incluir Librer\xeda** -> **Gestionar Librerias** y busque la palabra "**U8g2**" en el **Gestionador Librer\xedas**. La encontrar\xe1 como **u8g2 library by oliver**, de click e instale.')),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/U8g2-lib.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Copie el siguiente c\xf3digo, Verifique para revisar errores en la sintaxis. Verifique que no hay ning\xfan error, y puede subir el c\xf3digo.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <Arduino.h>\n#include <U8x8lib.h>\n\nU8X8_SSD1306_128X64_ALT0_HW_I2C u8x8(/* reset=*/ U8X8_PIN_NONE);\n\nvoid setup(void) {\n  u8x8.begin();\n  u8x8.setFlipMode(1);\n}\n\nvoid loop(void) {\n  u8x8.setFont(u8x8_font_chroma48medium8_r);\n  u8x8.setCursor(0, 0);\n  u8x8.print("Hello World!");\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"An\xe1lisis del C\xf3digo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <>\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"#include")," es usado para incluir librer\xedas externas en el sketch. Esto brinda al programador acceso a un gran grupo de librer\xedas est\xe1ndar en C (Con grupos pre-creados de funciones), adem\xe1s las librer\xedas son escritas espec\xedficamente para Arduino."),(0,r.kt)("p",null,"Note que ",(0,r.kt)("inlineCode",{parentName:"p"},"#include"),", es similar a ",(0,r.kt)("inlineCode",{parentName:"p"},"#define"),", no tiene un punto y coma al final, y el compilador marcar\xe1 un error si se le agrega."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <U8x8lib.h>\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"#include")," es una intrucci\xf3n que introduce un archivo. En este caso estamos utilizando la librer\xeda U8x8lib.h."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"U8X8_SSD1306_128X64_ALT0_HW_I2C u8x8(/* reset=*/ U8X8_PIN_NONE);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Una vez que el objeto se ha declarado, puedes utilizar las funciones dentro de las librer\xedas. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"u8x8.begin();\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Simplificar la configuaci\xf3n de un display en el ambiente de Arduino. Vea la gu\xeda de configuraci\xf3n de la selecci\xf3n de un constructor adecuado para U8g2."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis")),(0,r.kt)("p",null,"u8x8.begin()"),(0,r.kt)("p",null,"Inicializa la librer\xeda u8g2. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"u8x8.setFlipMode(1);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Algunos displays soportan una rotaci\xf3n interna de 180 grados. Esta caracter\xedstica del hardware puede ser controlada con el siguiente procedimiento. Importante: Vuelva a dibujar todo el display cambiando el modo de orientaci\xf3n. Lo mejor es primero limpiar el display, seguido a esto cambie el modo de orientaci\xf3n y finalmente redibuje el contenido. Los resultados ser\xe1n indefinidos por cualquier contenido en la pantalla.\n",(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,"u8x8.setFlipMode(",(0,r.kt)("strong",{parentName:"p"},"modo"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Par\xe1metros:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"modo"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"1")),(0,r.kt)("p",null,"Gira el display 180 grados."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"u8x8.setCursor();\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Defina el cursor de la funci\xf3n print. Cualquier salida de la funci\xf3n print iniciar\xe1 en dicha posici\xf3n."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,"u8x8.setCursor(",(0,r.kt)("strong",{parentName:"p"},"x, y"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Par\xe1metros:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"x, y"),": Posici\xf3n, Columna/Fila, del cursor de la funci\xf3n print."),(0,r.kt)("p",null,"Configure la posici\xf3n del cursor de dibujo."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"u8x8.setFont()\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")," "),(0,r.kt)("p",null,"Define la fuente u8x8 para el dibujo glifos y cadenas."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis")),(0,r.kt)("p",null,"u8x8.setFont(",(0,r.kt)("strong",{parentName:"p"},"fuente_8x8"),")"),(0,r.kt)("p",null,"Configure la fuente para el display."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"u8x8.print();\n")),(0,r.kt)("p",null,"Dibuje el contenido en el OLED."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Demostraci\xf3n del Efecto y Resutado Serial Print:")),(0,r.kt)("p",null,'Imprime "Hello, World" en el Display OLED. '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"U8g2 Referencia de la Librer\xeda")),(0,r.kt)("p",null,"If you want to more information about U8g2 library, please refer to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/olikraus/u8g2/wiki/u8g2reference"},"here"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Gu\xeda de Separaci\xf3n"))),(0,r.kt)("p",null,"Utiliza un cable Grove para conectar el OLED a la interfaz al puerto ",(0,r.kt)("strong",{parentName:"p"},"I2C")," del Seeeduino Lotus (Nota: La direcci\xf3n por defaul de I2C es 0x78)"),(0,r.kt)("h3",{id:"lecci\xf3n-8-detectando-temperatura-y-humedad-del-entorno"},"Lecci\xf3n 8: Detectando Temperatura y Humedad del Entorno"),(0,r.kt)("p",null,"Alguna vez te has preguntado \xbfQu\xe9 humedad y temperatura tendr\xe1 mi entorno? \xbfQuieres saber el n\xfamero exacto? \xbfTe gustar\xeda saber si debes elegir un abrigo o s\xf3lo una playera hoy? \xa1Hagamos un term\xf3metro! "),(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Informaci\xf3n de Contexto"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\xbfQu\xe9 es el prot\xf3colo I2C?"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Prot\xf3colo:")," Aqu\xed tienes una breve explicaci\xf3n sobre el prot\xf3colo I2C.EL bus I2C solamente necesita dos cables conectados entre dispositivos para poder crear comunicaci\xf3n entre ellos:  SDA (Serial Data Line) y SCL (Serial Clock Line)."),(0,r.kt)("p",null,"Estas dos lineas son bidireccionales, por lo tanto son lineas I/O. Estas son los componentes principales para comenzar la comunicaci\xf3n y generar el reloj obierto de la transmisi\xf3n, cualquier dispositivo con una direcci\xf3n ser\xe1 considerado por el microcontrolador apartir de este momento."),(0,r.kt)("p",null,"La relaci\xf3n entre maestro y esclavo (Emisor y Receptor) en la transmisi\xf3n no es constante pero depende de la direcci\xf3n de la transmisi\xf3n de informaci\xf3n. S\xed por ejemplo, el emisor desea enviar informaci\xf3n el receptor, primero define la direcci\xf3n a comunicar, acto seguido comienza a enviar la informaci\xf3n de manera activa, y finalmente el maestro termina la transmisi\xf3n. S\xed el maestro debe recibir informaci\xf3n del esclavo, este comienza solicitando la direcci\xf3n del maestro para poder reconocerlo entre los dispositivos."),(0,r.kt)("p",null,"El maestro entonces recibe la informaci\xf3n enviada del dispositivo, y el mismo termina el proceso de recibimiento. En estos casos el host o maestro es responsable de la generaci\xf3n de sincronizaci\xf3n del reloj y de la finalizaci\xf3n de la transmisi\xf3n de informaci\xf3n. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Pr\xe1ctica:")," Haga que el OLED Display muestre la temperatura y humedad ambiental.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Componentes Involucrados"),"1. Seeeduino Lotus 2. Grove OLED 3. Grove Temperature and Temperature Sensor 4. Grove cable(S\xed ha sido separado)")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/Temp.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Conexi\xf3n de Hardware"),"- **Conexi\xf3n de M\xf3dulo** - Conexi\xf3n por defecto con ",(0,r.kt)("em",null,"Stamp holes")," en el PCB. - El Seeeduino deber\xe1 encontrarse conectado a la computadora via USB.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"C\xf3digo"),'- Abra el IDE de Arduino. - Instale la librer\xeda **Grove Temperature and Humidity Sensor(DHT11) library**: Navegue  a  **Sketch** -> **Incluir Librer\xeda** -> **Gestionar Librer\xedas...** y busque la palabra **Grove Temperature and Humidity Sensor(DHT11)**" en el **Library Manager** e instale.')),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/Temp-lib.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Copie el siguiente c\xf3digo, Verifique para revisar errores en la sintaxis. Verifique que no hay ning\xfan error, y puede subir el c\xf3digo.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Cpp"},'//Sensor de Temperatura y Humedad\n#include "DHT.h"\n#include <Arduino.h>\n#include <U8x8lib.h>\n\n#define DHTPIN 3     //El pin conectado\n#define DHTTYPE DHT11   // M\xf3delo de Sensor\nDHT dht(DHTPIN, DHTTYPE);\n\nU8X8_SSD1306_128X64_ALT0_HW_I2C u8x8(/* reset=*/ U8X8_PIN_NONE);\n\nvoid setup(void) {\n  Serial.begin(9600); \n  Serial.println("DHTxx test!");\n  dht.begin();\n  u8x8.begin();\n  u8x8.setPowerSave(0);  \n  u8x8.setFlipMode(1);\n}\n\nvoid loop(void) {\n\n  float temp, humi;\n  temp = dht.readTemperature();\n  humi = dht.readHumidity();\n  \n  u8x8.setFont(u8x8_font_chroma48medium8_r);\n  u8x8.setCursor(0, 33);\n  u8x8.print("Temp:");\n  u8x8.print(temp);\n  u8x8.print("C");\n  u8x8.setCursor(0,50);\n  u8x8.print("Humidity:");\n  u8x8.print(humi);\n  u8x8.print("%");\n  u8x8.refreshDisplay();\n  delay(200);\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"An\xe1lisis del C\xf3digo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"float temp, humi;\n")),(0,r.kt)("p",null,"Definimos las variables para almacenar las lecturas."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"temp = dht.readTemperature();\nhumi = dht.readHumidity();\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Funciones a utilizar para leer la temperatura y humedad de los valores del sensor."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"dht.readTemperature()")," y ",(0,r.kt)("strong",{parentName:"p"},"dht.readHumidity()"),". Ambos regresan un tipo: float (Punto flotante o decimal)."),(0,r.kt)("p",null,"Llama estas funciones para leer la temperatura y humedad almacenandolas dentro de las variables definidas."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Demostraci\xf3n del Efecto y Resutado Serial Print:")),(0,r.kt)("p",null,"La temperatura y humedad apareceran en la pantalla OLED."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Gu\xeda de Separaci\xf3n"))),(0,r.kt)("p",null,"Use Grove cable to connect the OLED to Seeeduino Lotus's ",(0,r.kt)("strong",{parentName:"p"},"I2C")," interface (Note: I2C's default address is 0x78). Connect the Grove Temperature and Humidity Sensor to Seeeduino Lotus's digital signal interface ",(0,r.kt)("strong",{parentName:"p"},"D3"),"."),(0,r.kt)("h3",{id:"lesson-9-measuring-surrounding-air-pressure"},"Lesson 9: Measuring Surrounding Air Pressure"),(0,r.kt)("p",null,"El Sensor Grove de Presi\xf3n de Aire (BMP280) es una tarjeta Grove Air Pressure Sensor(BMP280) es una tarjeta construida alrededor del barometro de alta presici\xf3n y bajo consumo Bosch BMP280. Este m\xf3dulo puede ser utilizado para medir la temperatura y presi\xf3n Atm\xf3sferica con gran presici\xf3n. Considerando que la presi\xf3n Atm\xf3sferica cambia respecto a la altitud, este sensor puede brindar una estimaci\xf3n de la altitud del lugar."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Componentes Involucrados"),"1. Seeeduino Lotus 2. Grove Sensor de Presi\xf3n de Aire 3. Grove cable (Si ha sido separado)")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/AirPressure.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Conexi\xf2n del Hardware"),"- **Conexi\xf3n del M\xf3dulo:** - Conexi\xf3n por defecto con ",(0,r.kt)("em",null,"Stamp holes")," en el PCB. - El Seeeduino deber\xe1 encontrarse conectado a la computadora via USB."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"C\xf3digo"),'- Abre el Arduino IDE - Instala la **Librer\xeda Grove Barometer Sensor**: Navega a **Sketch** -> **Incluir Library** -> **Gestionar Librer\xedas** y busque la palabra "**Grove BMP280**" en el **Gestor de Librer\xedas**, e instale.')),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/BMP-lib.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Copie el siguiente c\xf3digo, Verifique para revisar errores en la sintaxis. Verifique que no hay ning\xfan error, y puede subir el c\xf3digo."),(0,r.kt)("li",{parentName:"ul"},"En este programa, el sensor Barom\xe9trico envia la informaci\xf3n al Seeeduino por medio del bus I2C y acto seguido el Seeeduino enviar\xe1 la informaci\xf2n atravez del monitor serial. Abre el ",(0,r.kt)("strong",{parentName:"li"},"Monitor Serial")," para ver los resultados.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Cpp"},'//Detecci\xf3n de la presi\xf3n de aire\n#include "Seeed_BMP280.h"\n#include <Wire.h>\n\nBMP280 bmp280;\n\nvoid setup() {\n    Serial.begin(9600);\n    if (!bmp280.init()) {\n        Serial.println("Dispositivo no conectado o Da\xf1ado");\n    }\n}\n\nvoid loop() {\n\n    float pressure;\n\n    //Obtenci\xf3n e impresi\xf3n de temperaturas.\n    Serial.print("Temp: ");\n    Serial.print(bmp280.getTemperature());\n    Serial.println("C"); //La unidad para Celsius, ya que arduino no soporta car\xe1cteres especiales.\n\n    //Obtenci\xf3n e Impresi\xf3n de la presi\xf3n atm\xf3sferica\n    Serial.print("Prei\xf3n: ");\n    Serial.print(pressure = bmp280.getPressure());\n    Serial.println("Pa");\n\n    //get and print altitude data\n    Serial.print("Altitud: ");\n    Serial.print(bmp280.calcAltitude(pressure));\n    Serial.println("m");\n\n    Serial.println("\\n");//Agregamos una linea nueva cada nuevo registro.\n\n    delay(1000);\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"An\xe1lisis del C\xf3digo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <Wire.h>\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"#include")," es una instrucci\xf3n que introduce la base de un archivo. En este caso utilizaremos la librer\xeda ",(0,r.kt)("inlineCode",{parentName:"p"},"<Wire.h>"),", esta librer\xeda se encuentra incluida en el IDE de Arduino. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "Seeed_BMP280.h"\n')),(0,r.kt)("p",null,"Representa al archivo del Seeed_BMP280.h, el cual nos brinda lo necesario para el funcionamiento. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'if (!bmp280.init()) {\n    Serial.println("\xa1Dispositivo no conectado o da\xf1ado!");\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,'Para inicializar el sensor de presi\xf3n de aire utilizamos bmp280.init(). M\xe1s adelante utilizaremos esta funci\xf3n en conjunto con una condici\xf3n if para verificar la correcta inicializaci\xf3n del sensor confirmandonos por medio de un mensaje. Si algun problema llegase a ocurrir, de igual manera nos dar\xe1 un mensaje "!" lo cual significa NO en programaci\xf3n.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"bmp280.init()")),(0,r.kt)("p",null,"si el sensor de Presi\xf3n de Aire no inicia de manera apropiada. Entonces, un mensaje de error ser\xe1 mostrado en el monitor serial."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Serial.print(bmp280.getTemperature());\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Funciones utilizadas para leer el valor de temperatura medida por el sensor. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"bmp280.getTemperature()"),". Tipo de dato: float (Punto flotante o decimal). "),(0,r.kt)("p",null,"Imprime los datos de temperatura en el monitor serial."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Serial.print(pressure = bmp280.getPressure());\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Funciones utilizadas para medir la presi\xf3n del aire obtenida por medio del sensor. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"bmp280.getPressure()"),". Tipo de dato: float (Punto flotante o decimal). "),(0,r.kt)("p",null,"Imprime la presi\xf3n del aire actual."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Serial.print(bmp280.calcAltitude(pressure));\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")),(0,r.kt)("p",null,"Toma el valor de la presi\xf3n para convertirla en altitud."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,"bmp280.calcAltitude(",(0,r.kt)("strong",{parentName:"p"},"float"),"). Tipo de dato: float (Punto flotante o decimal). "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Par\xe1metros:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"float"),": Valor de Presi\xf3n."),(0,r.kt)("p",null,"Imprime la amplitud. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Demostraci\xf3n del Efecto y Resutado Serial Print:")),(0,r.kt)("p",null,"Las lecturas de presi\xf3n del Aire ser\xe1n mostradas en el monitor serial."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Gu\xeda de Separaci\xf3n"))),(0,r.kt)("p",null,"Utiliza un cable Grove para conectar el Sensor Grove de Presi\xf3n de Aire a la interfaz ",(0,r.kt)("strong",{parentName:"p"},"I2C")," del Seeeduino Lotus. (nota: la direcciones por defecto I2C son  0x77 o 0x76)."),(0,r.kt)("h3",{id:"lecci\xf3n-10-sensando-movimiento"},"Lecci\xf3n 10: Sensando Movimiento"),(0,r.kt)("p",null,"Este es el ultimo sensor, el aceler\xf3metro de tres ejes, y con este m\xf3dulo f\xe1cilmente podemos agregar monitoreo de movimiento a tus dise\xf1os. Por lo tanto, podemos hacer una gran variedad de interesantes peque\xf1os experimentos con las bases de movimiento."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Pr\xe1ctica:")," Cuando el movimiento es detectado, el zumbador sonar\xe1 una alarma indicando que el objeto se est\xe1 moviendo.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Componentes Involucrados"),"1. Seeeduino Lotus 2. Grove Aceler\xf3metro de 3-ejes 3. Grove cable(Si ha sido separa)")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/Gyro.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Conexi\xf3n del Hardware"),"- **Conexi\xf3n del M\xf3dulo:** - Conexi\xf3n por defecto con ",(0,r.kt)("em",null,"Stamp holes")," en el PCB. - El Seeeduino deber\xe1 encontrarse conectado a la computadora via USB."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"C\xf3digo"),"- Abra el IDE de Arduino. - Descargue [3-Axis Digital Accelerometer( \xb12g to 16g)](https://github.com/Seeed-Studio/Seeed_Arduino_LIS3DHTR) desde GitHub. De click en **Sketch** > **Incluir library** > **Agregar Librer\xeda .ZIP**, importe la librer\xeda al IDE. - Copie el siguiente c\xf3digo, Verifique para revisar errores en la sintaxis. Verifique que no hay ning\xfan error, y puede subir el c\xf3digo. - En este programa, el sensor Barom\xe9trico envia la informaci\xf3n al Seeeduino por medio del bus I2C y acto seguido el Seeeduino enviar\xe1 la informaci\xf2n atravez del monitor serial. Abre el **Monitor Serial** para ver los resultados.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Cpp"},'//Aceleraci\xf3n de la Gravedad\n#include "LIS3DHTR.h"\n#ifdef SOFTWAREWIRE\n    #include <SoftwareWire.h>\n    SoftwareWire myWire(3, 2);\n    LIS3DHTR<SoftwareWire> LIS;       //Software I2C\n    #define WIRE myWire\n#else\n    #include <Wire.h>\n    LIS3DHTR<TwoWire> LIS;           //Hardware I2C\n    #define WIRE Wire\n#endif\n\nvoid setup() {\n    Serial.begin(9600);\n    while (!Serial) {};\n    LIS.begin(WIRE, 0x19); //IIC init\n    delay(100);\n    LIS.setOutputDataRate(LIS3DHTR_DATARATE_50HZ);\n}\nvoid loop() {\n    if (!LIS) {\n        Serial.println("LIS3DHTR no se ha conectado.");\n        while (1);\n        return;\n    }\n    //3 axis\n    Serial.print("x:"); Serial.print(LIS.getAccelerationX()); Serial.print("  ");\n    Serial.print("y:"); Serial.print(LIS.getAccelerationY()); Serial.print("  ");\n    Serial.print("z:"); Serial.println(LIS.getAccelerationZ());\n\n    delay(500);\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"An\xe1lisis del C\xf3digo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "LIS3DHTR.h"\n#ifdef SOFTWAREWIRE\n    #include <SoftwareWire.h>\n    SoftwareWire myWire(3, 2);\n    LIS3DHTR<SoftwareWire> LIS;   //Software I2C\n    #define WIRE myWire\n#else\n    #include <Wire.h>\n    LIS3DHTR<TwoWire> LIS;        //Hardware I2C\n    #define WIRE Wire\n#endif\n')),(0,r.kt)("p",null,"Inicializaci\xf3n del m\xf3dulo utilizando software I2C o hardware I2C."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"while (!Serial) {};\n")),(0,r.kt)("p",null,"El c\xf3digo se detiene aqu\xed si el monitor serial no se ha abierto, por ello deber\xe1 abrir el monitor serial."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"LIS.begin(WIRE, 0x19);\nLIS.setOutputDataRate(LIS3DHTR_DATARATE_50HZ);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")," Inicializa el aceler\xf3metro. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"LIS.begin(Wire, address)"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")," Define la velocidad de salida de los datos del aceler\xf3metro. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"LIS.setOutputDataRate(odr_type_t odr)"),"."),(0,r.kt)("p",null,"Inicializa el aceler\xf3metro y configura la velocidad de salida en 50Hz."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'Serial.print("x:"); Serial.print(LIS.getAccelerationX()); Serial.print("  ");\nSerial.print("y:"); Serial.print(LIS.getAccelerationY()); Serial.print("  ");\nSerial.print("z:"); Serial.println(LIS.getAccelerationZ());\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")," "),(0,r.kt)("p",null,"Funciones utilizadas para leer el valor del Eje-X del sensor."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintacis::")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"LIS.getAccelerationX()"),". Tipo de dato: float (Punto flotante o decimal)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," "),(0,r.kt)("p",null,"Funciones utilizada para leer el valor del Eje-Y del sensor. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"LIS.getAccelerationY()"),". Tipo de dato: float (Punto flotante o decimal)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n:")," "),(0,r.kt)("p",null,"Funciones utilizadas para leer el valor del Eje-Z del sensor."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"LIS.getAccelerationZ()"),".Tipo de dato: float (Punto flotante o decimal)."),(0,r.kt)("p",null,"Imprime los datos de los 3 Ejes en el monitor serial."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Demostraci\xf3n del Efecto y Resutado Serial Print:")),(0,r.kt)("p",null,"Las lecturas del Aceler\xf3metro de 3 Ejes ser\xe1n mostradas en el Monitor Serial."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Gu\xeda de Separaci\xf3n "))),(0,r.kt)("p",null,"Utiliza los cables Grove para conectar el Grove Aceler\xf3metro de 3 ejes (Grove 3-axis Accelerometer) a la interfaz ",(0,r.kt)("strong",{parentName:"p"},"I2C")," del Seeeduino Lotus. (nota: La derecci\xf3n por defecto I2C es 0x19)."),(0,r.kt)("h2",{id:"proyectos-extras"},"Proyectos Extras"),(0,r.kt)("h3",{id:"proyecto-1-l\xe1mpara-de-ritmo-din\xe1mico-musical"},"Proyecto 1: L\xe1mpara de ritmo din\xe1mico musical."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Descripci\xf3n de Proyecto:")," En este experimento, haremos que el zumbador reproduzca m\xfasica agradable, y las luces encender\xe1n de acuerdo a la frecuencia de la m\xfasica y el ritmo.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Componentes Involucrados"),"1. Seeeduino Lotus 2. Grove LED 3. Zumbador (Buzzer) 4. Grove Cables(Si han sido separados)")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/project1.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Conexi\xf3n del Hardware")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Conexi\xf3n del M\xf3dulo:")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"}," - Conexi\xf3n por defecto con <em> Stamp holes </em> en el PCB. \n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Conecte el Seeeduino por medio del cable USB a la computadora. "))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"C\xf3digo"),"- Abra el Arduino IDE. - Copie el siguiente c\xf3digo, de click en Verificar para revisar errores en la sintaxis. Verifique que no hay ningun error, y carge el c\xf3digo.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"//L\xe1mpara de ritmo din\xe1mico musical\n#define NTD0 -1\n#define NTD1 294\n#define NTD2 330\n#define NTD3 350\n#define NTD4 393\n#define NTD5 441\n#define NTD6 495\n#define NTD7 556\n\n#define NTDL1 147\n#define NTDL2 165\n#define NTDL3 175\n#define NTDL4 196\n#define NTDL5 221\n#define NTDL6 248\n#define NTDL7 278\n\n#define NTDH1 589\n#define NTDH2 661\n#define NTDH3 700\n#define NTDH4 786\n#define NTDH5 882\n#define NTDH6 990\n#define NTDH7 112\n\n#define WHOLE 1\n#define HALF 0.5\n#define QUARTER 0.25\n#define EIGHTH 0.25\n#define SIXTEENTH 0.625\n\nint tune[]=\n{\nNTD3,NTD3,NTD4,NTD5,\nNTD5,NTD4,NTD3,NTD2,\nNTD1,NTD1,NTD2,NTD3,\nNTD3,NTD2,NTD2,\nNTD3,NTD3,NTD4,NTD5,\nNTD5,NTD4,NTD3,NTD2,\nNTD1,NTD1,NTD2,NTD3,\nNTD2,NTD1,NTD1,\nNTD2,NTD2,NTD3,NTD1,\nNTD2,NTD3,NTD4,NTD3,NTD1,\nNTD2,NTD3,NTD4,NTD3,NTD2,\nNTD1,NTD2,NTDL5,NTD0,\nNTD3,NTD3,NTD4,NTD5,\nNTD5,NTD4,NTD3,NTD4,NTD2,\nNTD1,NTD1,NTD2,NTD3,\nNTD2,NTD1,NTD1\n};\n\nfloat durt[]=\n{\n1,1,1,1,\n1,1,1,1,\n1,1,1,1,\n1+0.5,0.5,1+1,\n1,1,1,1,\n1,1,1,1,\n1,1,1,1,\n1+0.5,0.5,1+1,\n1,1,1,1,\n1,0.5,0.5,1,1,\n1,0.5,0.5,1,1,\n1,1,1,1,\n1,1,1,1,\n1,1,1,0.5,0.5,\n1,1,1,1,\n1+0.5,0.5,1+1,\n};\n\nint length;\nint tonepin=5;\nint ledp=4;\n\nvoid setup()\n{\n  pinMode(tonepin,OUTPUT);\n  pinMode(ledp,OUTPUT);\n  length=sizeof(tune)/sizeof(tune[0]);\n}\n\nvoid loop()\n{\n  for(int x=0;x<length;x++)\n  {\n    tone(tonepin,tune[x]);\n    digitalWrite(ledp, HIGH); \n    delay(400*durt[x]);\n    digitalWrite(ledp, LOW);\n    delay(100*durt[x]);\n    noTone(tonepin);\n\n  }\n  delay(4000);\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"An\xe1lisis del C\xf3digo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#define NTD\n")),(0,r.kt)("p",null,"Aqu\xed definimos la freceuncia de la nota D, el cual se encuentra dividido en bajo, alto, y agudos."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#define WHOLE 1\n#define HALF 0.5\n#define QUARTER 0.25\n#define EIGHTH 0.25\n#define SIXTEENTH 0.625\n")),(0,r.kt)("p",null,"Nota: El ritmo se encuentra dividido por un tiempo, medio tiempo, 1/4 tiempo, 1/8 tiempo, especificamos un tiempo en una nota es de 1; Medio tiempo es 0.5; 1/4 de Tiempo es 0.25; 1/8 es 0.125."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int tune[]=...\n")),(0,r.kt)("p",null,"Lista de frecuencias acorde al espectro."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"float durt[]=...\n")),(0,r.kt)("p",null,"Lista de tiempos acorde al espectro."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"delay(100*durt[x]);\n")),(0,r.kt)("p",null,"Control de las luces LED, encendido y apagado respectivamente. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Demostraci\xf3n del Efecto y Resutado Serial Print:")),(0,r.kt)("p",null,"El Zumbador har\xe1 una nota beep mientras el m\xf3dulo LED parpadea con la misma frecuencia."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Gu\xeda de Separaci\xf3n "))),(0,r.kt)("p",null,"Conecte el LED Grove al puerto digital ",(0,r.kt)("strong",{parentName:"p"},"D4")," del Seeeduino, as\xed mismo el Zumbador (Buzzder) a la interfaz ",(0,r.kt)("strong",{parentName:"p"},"D5")," del mismo tipo."),(0,r.kt)("h3",{id:"proyecto-2-haga-una-l\xe1mpara-de-escritorio-inteligente-a-la-inducci\xf3n-de-luz-y-sonido"},"Proyecto 2: Haga una L\xe1mpara de Escritorio Inteligente a la inducci\xf3n de luz y sonido."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Descripci\xf3n del Proyecto:")," Como el nombre infiere, este proyecto consta de crear una peque\xf1a lampara controlable por la Luz y el Sonido. Necesitaremos utilizar el m\xf3dulo LED como salida. El sensor de Luz y el del sonido ser\xe1n utilizados como se\xf1ales de entradas. De esta manera, podr\xe1s lograr la funci\xf3n de l\xe1mpara inteligente: Si el sonido ambiente se encuenta por encima del nivel preestablecido, entonces la l\xe1mpara LED se encender\xe1, o de igual manera, si el nivel de Luz del ambiente se encuentra debajo de cierto valor, la luz se encender\xe1 de igual manera.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Componentes Involucrados"),"1. Seeeduino Lotus 2. Grove LED 3. Sensor de Luz 4. Sensor de Sonido 5. Grove cable(Si ha sido separado)")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/project2.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Conexi\xf3n del Hardware"),"- **Conexi\xf3n del M\xf3dulo:** - Conexi\xf3n por defecto con ",(0,r.kt)("em",null," Stamp holes ")," en el PCB. - Conecte el Seeeduino por medio del cable USB a la computadora.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"C\xf3digo"),"- Abra el Arduino IDE. - Copie el siguiente c\xf3digo, de click en Verificar para revisar errores en la sintaxis. Verifique que no hay ningun error, y carge el c\xf3digo.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Cpp"},'//L\xe1mpara de Escritorio Inteligente\nint soundPin = A2; // La se\xf1al anal\xf3gica de sensor de sonido estar\xe1 en este pin.\nint lightPin = A6; //La se\xf1al anal\xf3gica de sensor de luz estar\xe1 en este pin.\nint ledPin = 4; //El LED se encontrar\xe1 en el pin D4\n\nvoid setup() {\n  pinMode(ledPin, OUTPUT);\n  pinMode(lightPin, INPUT);\n  pinMode(soundPin, INPUT);\n}\n\nvoid loop(){\n  int soundState = analogRead(soundPin); // Lee el valor del sensor de sonido.\n  int lightState = analogRead(lightPin); // Lee el velor del sensor de luz.\n  // Si en valor del sensor es mauyor que 500 o la del sensor del sonido menor a 200, la luz se encender\xe1.\n  //En caso contrario, se apagar\xe1.\nif (soundState > 500 || lightState < 200) {\n  digitalWrite(ledPin, HIGH);\n  delay(500); //You can add the "//" to remove the delay\n}else{\n  digitalWrite(ledPin, LOW);\n}\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Code Analysis"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"if (soundState > 500 || lightState < 200) {\n  ...\n}\n")),(0,r.kt)("p",null,"Lo que se encuentra en p\xe1rentesis es una expresi\xf3n l\xf3gica. Ambas ",(0,r.kt)("strong",{parentName:"p"},"&&")," y ",(0,r.kt)("strong",{parentName:"p"},"||")," son com\xfanmente usadas para comparaciones l\xf3gicas. El uso m\xe1s com\xfan es ",(0,r.kt)("strong",{parentName:"p"},"if (expression 1 || expression 2)")," y ",(0,r.kt)("strong",{parentName:"p"},"if (expression 1 && expression 2)"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"||"),' representa "',(0,r.kt)("strong",{parentName:"p"},"or"),'", si se satisface una u otra, y satisfaca la condici\xf3n del if.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"&&"),' significa "',(0,r.kt)("strong",{parentName:"p"},"and"),'", La declaraci\xf3n en el if{} es ejecutada solamente si todas las expresiones en el p\xe1rentesis son ciertas. '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Demostraci\xf3n del Efecto y Resutado Serial Print:")),(0,r.kt)("p",null,"si el sonido  es lo suficientemente alto o la intensidad de la luz suficientemente baja, el m\xf3dulo LED se encender\xe1 con mayor intensidad."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{size:"5;font",color:"#314B9F"},"Gu\xeda de Separaci\xf3n"))),(0,r.kt)("p",null,"Conecta el LED Grove al puerto digital ",(0,r.kt)("strong",{parentName:"p"},"D4")," del Seeeduino Lotus, conecta el Sensor de Luz al puerto anal\xf3gico ",(0,r.kt)("strong",{parentName:"p"},"A1"),", as\xed mismo conecta el Sensor de Sonido al puerto ",(0,r.kt)("strong",{parentName:"p"},"A2"),", todo utilizando tus cables Grove."),(0,r.kt)("h2",{id:"crea-tus-propios-m\xf3dulos--tarjetas"},"Crea tus propios m\xf3dulos & tarjetas"),(0,r.kt)("p",null,"Despu\xe9s de este periodo de estudio, te encuentras listo para el entendimiento de esquem\xe1ticos electr\xf3nicos de Arduino y de Hardware ",(0,r.kt)("em",null,"Open-Source"),". Entonces \xbfPor qu\xe9 no ir m\xe1s all\xe1 e intentar crear tus propios m\xf3dulos o tarjetas de desarrollo?"),(0,r.kt)("h3",{id:"eda"},"EDA"),(0,r.kt)("p",null,"Para dise\xf1ar tus propias tarjetas, tendr\xe1s que dise\xf1ar los esquem\xe1ticos para tus propios m\xf3dulos, para ello necesitar\xe1s EDA. Nosotros te recomendamos el software libre EDA."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"KiCAD"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.kicad-pcb.org/"},"KiCad")," es una suite de software libre para dise\xf1o autom\xe1tico de electr\xf3nica. Facilita el dise\xf1o de esquem\xe1ticos para circuitos electr\xf3nicos y su conversi\xf3n a dise\xf1os PCB. Este cuenta con un ambiente integrado para la captura de esquem\xe1ticos y trazado de dise\xf1os de PCB. Adem\xe1s dispone de captura de esquem\xe1ticos y trazado de PCB con salida de Gerbers. La suite corre en Windows, Linux y MacOs y se encuentra licenciado bajo GNU GPL v3."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Geppetto"))),(0,r.kt)("p",null,"Si no quieres trabajar tu mismo en la creci\xf3n de un esquem\xe1tico o trazado, pero deseas convertir tu prototipo basado en los m\xf3dulos de Seeed en un producto integrado, te recomendamos intentar con Geppetto. "),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/geppetto"},"Geppetto")," es, por mucho, la manera m\xe1s f\xe1cil y menos cara de producir electr\xf3nica de calidad. No necesitas saber sobre resistencias, capacitores, inductores, dise\xf1o de Pads ni nada de EE para dese\xf1ar tu propio m\xf3dulo. Geppetto tiene una modalida de arrastra y suelta... cualquiera puede crear dispositivos IoT profesionales. Para hacerlo m\xe1s conveniente para ti, Geppeto tiene una librer\xeda de Seeed. \xa1Entonces puedes crear tus propios m\xf3dulos Grove f\xe1cilmente! "),(0,r.kt)("h3",{id:"servicios-de-pcb"},"Servicios de PCB"),(0,r.kt)("p",null,"Una vez que termines tu dise\xf1o, revisa nuestro ",(0,r.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/fusion_pcb.html"},"Seeed Fusion servicio PCBA "),", donde podr\xe1s llevar tus dise\xf1os a un dispositivo funcional."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/img/Fusion.png",alt:null})),(0,r.kt)("p",null,"Seeed Studio tiene su propia ",(0,r.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/opl.html"},"Librer\xeda de Componentes (Open Parts Library (OPL))")," la cual es una colecci\xf3n de m\xe1s de 10,000 componentes com\xfanmente utilizados, y especialmente distribuidos para  el servicios de PCBA de Seeed Fusion. Para acelerar el proceso de dise\xf1o de PCB, Seeed se encuentra construyendo librer\xedas de componentes para KitCad e Eagle. Cuando todos los componentes provienen del OPL de Seeed y usando el ",(0,r.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/fusion_pcb.html"},"Servicio de Ensamble PCB (PCBA) de Seeed Fusion"),", la produci\xf3n completa del PCBA puede ser reducida de 20 a s\xf3lo 7 D\xedas."),(0,r.kt)("h2",{id:"visualizador-de-esquem\xe1tico-online"},"Visualizador de Esquem\xe1tico ",(0,r.kt)("em",null,"Online")),(0,r.kt)("div",{className:"altium-ecad-viewer","data-project-src":"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/res/Grove-Beginner-Kit-for-Arduino-SCH-PCB.zip",style:{borderRadius:"0px 0px 4px 4px",height:500,borderStyle:"solid",borderWidth:1,borderColor:"rgb(241, 241, 241)",overflow:"hidden",maxWidth:1280,maxHeight:700,boxSizing:"border-box"}}),(0,r.kt)("h2",{id:"recursos"},"Recursos"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"[**Grove Beginner Kit para Arduino Wiki]","** ",(0,r.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/res/Grove-Beginner-Kit-For-ArduinoPDF.pdf"},"PDF"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/res/Grove-Beginner-Kit-for-Arduino-SCH-PCB.zip"},(0,r.kt)("strong",{parentName:"a"},"Grove Beginner Kit para Arduino Archivos de Dise\xf1o,")," Esquem\xe1tico"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Librer\xedas de M\xf3dulos en GitHub:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/olikraus/U8g2_Arduino"},"Display OLED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/Seeed-Studio/Grove_Temperature_And_Humidity_Sensor"},"Sensor de Temperatura y Humedad")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/Seeed-Studio/Grove_BMP280"},"Sensor de presi\xf3n atmosf\xe9rica ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/Seeed-Studio/Seeed_Arduino_LIS3DHTR"},"3-Axis Accelerator")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/res/Grove-beginner-kit-for-arduino-datasheet.zip"},(0,r.kt)("strong",{parentName:"a"},"Datasheet (Hojas de datos) de los sensores")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/res/GroveBeginnerKitFirmwareFINAL.zip"},(0,r.kt)("strong",{parentName:"a"},"Demostraci\xf3n de firmaware inicial para Arduino")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove-Beginner-Kit-For-Arduino/res/Grove-Beginner-Kit-For-Arduino-Resources-in-one(20200401).7z"},(0,r.kt)("strong",{parentName:"a"},"Recursos para el Grove Beginner Kit para Arduino en un solo")," [7z] (2020-04-01)")))),(0,r.kt)("h2",{id:"m\xe1s-informaci\xf3n-aprendizaje-continuo"},"M\xe1s Informaci\xf3n. Aprendizaje Continuo"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/256ericpan/LSTM_IoT"},"LSTM for live IoT data prediction"))),(0,r.kt)("h2",{id:"soporte-t\xe9cnico"},"Soporte T\xe9cnico"),(0,r.kt)("div",{class:"button_tech_support_container"},(0,r.kt)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,r.kt)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,r.kt)("div",{class:"button_tech_support_container"},(0,r.kt)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,r.kt)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}u.isMDXComponent=!0}}]);